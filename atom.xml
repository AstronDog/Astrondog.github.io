<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dr. JunWang</title>
  
  <subtitle>AstronDog</subtitle>
  <link href="http://www.drjun.wang/atom.xml" rel="self"/>
  
  <link href="http://www.drjun.wang/"/>
  <updated>2024-08-27T20:20:37.000Z</updated>
  <id>http://www.drjun.wang/</id>
  
  <author>
    <name>Jun Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Resolution and Rayleigh Criterion</title>
    <link href="http://www.drjun.wang/2024/08/27/20240827-resolution-rayleigh/"/>
    <id>http://www.drjun.wang/2024/08/27/20240827-resolution-rayleigh/</id>
    <published>2024-08-27T20:20:37.000Z</published>
    <updated>2024-08-27T20:20:37.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>Diffraction limits resolution.</p></blockquote><blockquote><p>The Rayleigh criterion states that two images are just resolvable when the centre of the diffraction pattern of one is directly over the first minimum of the diffraction pattern of the other.</p></blockquote><h2 id="Diffraction"><a href="#Diffraction" class="headerlink" title="Diffraction"></a>Diffraction</h2><p>Diffraction is the interference or bending of waves around the corners of an <strong>obstacle</strong> or through an <strong>aperture</strong> into the region of geometrical shadow of the obstacle/aperture.</p><h3 id="Single-slit-diffraction"><a href="#Single-slit-diffraction" class="headerlink" title="Single-slit diffraction"></a>Single-slit diffraction</h3><p>A long slit of infinitesimal width which is illuminated by light diffracts the light into a series of circular waves and the wavefront which emerges from the slit is a cylindrical wave of uniform intensity, in accordance with the <a href="https://en.wikipedia.org/wiki/Huygens%E2%80%93Fresnel_principle">Huygens–Fresnel principle</a>.</p><div style="text-align: center;">    <img src="/figs/20240827-resolution-rayleigh.assets/DiffractionSingleSlit_Anim.gif" alt="**Figure 1:** 2D Single-slit diffraction with width changing animation" width="500"></div><div style="text-align: center;">    <img src="/figs/20240827-resolution-rayleigh.assets/Single_Slit_Diffraction.svg.png" alt="**Figure 2:** Intensity pattern of a single-slit diffraction" width="500"></div><p>The far-field diffraction pattern of a plane wave incident on a circular aperture, known as the Airy disk, describes how the intensity of light varies with angle. The intensity distribution I(θ)I(\theta)I(θ) as a function of the angle θ\thetaθ from the optical axis is given by:</p><p>$$<br>I(\theta) = I_0 \left(\frac{2J_1(k a \sin\theta)}{k a \sin\theta}\right)^2<br>$$</p><p>where $a$ is the radius of the circular aperture, $k$ is equal to $2\pi /\lambda $ and $J_{1}$ is a <a href="https://en.wikipedia.org/wiki/Bessel_function">Bessel function</a>. The smaller the aperture, the larger the spot size at a given distance, and the greater the divergence of the diffracted beams.</p><h2 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h2><p>Light diffracts as it moves through space, bending around obstacles, interfering constructively and destructively. Diffraction limits the detail we can obtain in images. **The figure below shows the effect of passing light through a small circular aperture. Instead of a bright spot with sharp edges, a spot with a fuzzy edge surrounded by circles of light is obtained. ** This pattern is caused by diffraction similar to that produced by a single slit. Light from different parts of the circular aperture interferes constructively and destructively. The effect is most noticeable when the aperture is small, but the effect is there for large apertures, too.</p><div style="text-align: center;">    <img src="/figs/20240827-resolution-rayleigh.assets/Airy_disk_spacing_near_Rayleigh_criterion.png" alt="**Figure 3:** Airy diffraction patterns generated by light from **two point sources** passing through a circular aperture. Points far apart (top) or meeting the Rayleigh criterion (middle) can be distinguished. Points closer than the Rayleigh criterion (bottom) are difficult to distinguish." width="500"></div><p>Airy diffraction patterns generated by light from <strong>two point sources</strong> passing through a circular aperture. Points far apart (top) or meeting the Rayleigh criterion (middle) can be distinguished. Points closer than the Rayleigh criterion (bottom) are difficult to distinguish.</p><p>Figure 3(b) shows the diffraction pattern produced by two point light sources that are close to one another. The pattern is similar to that for a single point source, and it is just barely possible to tell that there are two light sources rather than one. If they were closer together, as in Figure 3(c), we could not distinguish them, thus limiting the detail or resolution we can obtain. This limit is an inescapable consequence of the wave nature of light. Thus light passing through a lens with a diameter D shows this effect and spreads, blurring the image, just as light passing through an aperture of diameter D does. So diffraction limits the resolution of any system having a lens or mirror. Telescopes are also limited by diffraction, because of the finite diameter D  of their primary mirror.</p><h2 id="The-Rayleigh-criterion"><a href="#The-Rayleigh-criterion" class="headerlink" title="The Rayleigh criterion"></a>The Rayleigh criterion</h2><p>The imaging system’s resolution can be limited either by diffraction causing blurring of the image. Diffraction is determined by the finite aperture of the optical elements.</p><p>consider the diffraction pattern for a circular aperture, which has a central maximum that is wider and brighter than the maxima surrounding it (similar to a slit) [see Figure 4(a)]. It can be shown that, for a circular aperture of diameter D, the first minimum in the diffraction pattern occurs at θ = 1.22 λ/D (providing the aperture is large compared with the wavelength of light, which is the case for most optical instruments). The Rayleigh criterion for the diffraction limit to resolution states that two images are just resolvable when the centre of the diffraction pattern of one is directly over the first minimum of the diffraction pattern of the other. See Figure 4(b). The first minimum is at an angle of  θ = 1.22λ/ D, so that two point objects are just resolvable if they are separated by the angle</p><p>$$<br>\theta_{\text{min}} \approx \frac{1.22\lambda}{D}<br>$$</p><p>where λ is the wavelength of light (or other electromagnetic radiation) and <strong>D</strong> is the diameter of the aperture, with which the two objects are observed. In this expression, θ has units of radians.</p><div style="text-align: center;">    <img src="/figs/20240827-resolution-rayleigh.assets/Figure_28_06_02a.jpg" alt="Graph of intensity of the diffraction pattern for a circular aperture." width="500"></div><p><strong>Figure 4:</strong> (a)  Note that, similar to a single slit, the central maximum is wider and brighter than those to the sides. (b) Two point objects produce overlapping diffraction patterns. Shown here is the Rayleigh criterion for being just resolvable. The central maximum of one pattern lies on the first minimum of the other.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;Diffraction limits resolution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The Rayle</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Personal/" scheme="http://www.drjun.wang/tags/Personal/"/>
    
    <category term="Astro" scheme="http://www.drjun.wang/tags/Astro/"/>
    
  </entry>
  
  <entry>
    <title>20240428 LOFAR configuration</title>
    <link href="http://www.drjun.wang/2024/04/28/20240428-LOFAR-configuration/"/>
    <id>http://www.drjun.wang/2024/04/28/20240428-LOFAR-configuration/</id>
    <published>2024-04-28T13:48:09.000Z</published>
    <updated>2024-04-28T13:48:09.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="LOFAR-station-lists"><a href="#LOFAR-station-lists" class="headerlink" title="LOFAR station lists"></a>LOFAR station lists</h2><p>lofar_cs_list = [‘CS001’, ‘CS002’, ‘CS003’, ‘CS004’, ‘CS005’, ‘CS006’, ‘CS007’, ‘CS011’, ‘CS013’, ‘CS017’, ‘CS021’, ‘CS024’, ‘CS026’, ‘CS028’, ‘CS030’, ‘CS031’,’CS032’, ‘CS101’, ‘CS103’, ‘CS201’, ‘CS301’, ‘CS302’, ‘CS401’, ‘CS501’]</p><p>lofar_rs_list = [‘RS106’, ‘RS205’, ‘RS208’, ‘RS210’, ‘RS305’, ‘RS306’, ‘RS307’, ‘RS310’, ‘RS406’, ‘RS407’, ‘RS409’, ‘RS503’, ‘RS508’, ‘RS509’]</p><p>lofar_is_list = [‘DE601’, ‘DE602’, ‘DE603’, ‘DE604’, ‘DE605’, ‘FR606’, ‘SE607’, ‘UK608’, ‘DE609’, ‘PL610’, ‘PL611’, ‘PL612’, ‘IE613’, ‘LV614’]</p><h2 id="Configuration-map"><a href="#Configuration-map" class="headerlink" title="Configuration map"></a>Configuration map</h2><h3 id="Superterp"><a href="#Superterp" class="headerlink" title="Superterp:"></a>Superterp:</h3><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/LOFAR_superterp.png" width="1800" height="1200"> </p><h3 id="Core-stations"><a href="#Core-stations" class="headerlink" title="Core stations"></a>Core stations</h3><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/LOFAR_core.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS001_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS002_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS003_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS004_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS005_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS006_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS007_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS011_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS013_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS017_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS021_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS024_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS026_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS028_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS030_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS031_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS032_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS101_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS103_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS201_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS301_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS302_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS401_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/CS501_configuration.png" width="1800" height="1200"> </p><h3 id="Remote-stations"><a href="#Remote-stations" class="headerlink" title="Remote stations"></a>Remote stations</h3><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS106_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS205_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS208_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS210_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS305_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS306_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS307_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS310_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS406_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS407_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS409_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS503_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS508_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/RS509_configuration.png" width="1800" height="1200"> </p><h3 id="International-staions"><a href="#International-staions" class="headerlink" title="International staions"></a>International staions</h3><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/DE601_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/DE602_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/DE603_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/DE604_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/DE605_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/DE609_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/FR606_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/SE607_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/UK608_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/PL610_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/PL611_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/PL612_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/IE613_configuration.png" width="1800" height="1200"> </p><p align="center">   <img src="/figs/20240428-LOFAR-configuration.assets/LV614_configuration.png" width="1800" height="1200"> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;LOFAR-station-lists&quot;&gt;&lt;a href=&quot;#LOFAR-station-lists&quot; class=&quot;headerlink&quot; title=&quot;LOFA</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Personal" scheme="http://www.drjun.wang/tags/Personal/"/>
    
    <category term="Python" scheme="http://www.drjun.wang/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>20240110-hexo-transplant</title>
    <link href="http://www.drjun.wang/2024/01/10/20240110-hexo-transplant/"/>
    <id>http://www.drjun.wang/2024/01/10/20240110-hexo-transplant/</id>
    <published>2024-01-10T21:21:12.000Z</published>
    <updated>2024-01-10T21:21:12.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="HEXO-博客移植"><a href="#HEXO-博客移植" class="headerlink" title="HEXO 博客移植"></a>HEXO 博客移植</h1><p>本文主要记载了在Ubuntu系统下移植Hexo搭建的个人网站到一台新电脑的步骤</p><h2 id="前期准备——基本环境的搭建"><a href="#前期准备——基本环境的搭建" class="headerlink" title="前期准备——基本环境的搭建"></a>前期准备——基本环境的搭建</h2><p>首先是在Ubuntu下搭建基础环境，主要是git和node.js.在Ubuntu中比较简单，直接使用apt安装</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><pre><code>sudo apt install git-core</code></pre><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>在Ubuntu上安装Node.js也比较简单，直接使用apt安装即可。</p><pre><code>sudo apt install npmsudo apt install nodejs</code></pre><h3 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h3><pre><code>sudo npm install hexo-cli -gsudo npm install hexo -g</code></pre><h2 id="准备移植"><a href="#准备移植" class="headerlink" title="准备移植"></a>准备移植</h2><h3 id="需要从原电脑复制的文件"><a href="#需要从原电脑复制的文件" class="headerlink" title="需要从原电脑复制的文件"></a>需要从原电脑复制的文件</h3><ul><li>_config.yml：站点配置</li><li>package.json：说明使用那些包</li><li>scaffolds：文章的模板</li><li>source：自己写的博客文件</li><li>themes：主题</li><li>.gitignore：限定在提交的时候哪些文件可以忽略</li></ul><h3 id="移植开始"><a href="#移植开始" class="headerlink" title="移植开始"></a>移植开始</h3><p>在新电脑中新建myblog文件夹，并将复制的文件移动到该文件夹，并在该文件夹下执行：</p><pre><code>npm installnpm install hexo-deployer-git --save</code></pre><p>然后就可以查看效果和部署了。</p><h2 id="查看效果及部署。"><a href="#查看效果及部署。" class="headerlink" title="查看效果及部署。"></a>查看效果及部署。</h2><p>运行 hexo g 生成博客。<br>运行 hexo s 查看博客。<br>打开 <a href="http://localhost:4000/%EF%BC%8C%E6%B2%A1%E9%97%AE%E9%A2%98%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%89%A7%E8%A1%8C%E4%B8%8B%E4%B8%80%E6%AD%A5%E3%80%82">http://localhost:4000/，没问题的话，执行下一步。</a><br>执行 hexo d 推送到远程仓库部署。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;HEXO-博客移植&quot;&gt;&lt;a href=&quot;#HEXO-博客移植&quot; class=&quot;headerlink&quot; title=&quot;HEXO 博客移植&quot;&gt;&lt;/a&gt;HEXO 博客移植</summary>
      
    
    
    
    <category term="Leisure" scheme="http://www.drjun.wang/categories/Leisure/"/>
    
    
    <category term="Personal" scheme="http://www.drjun.wang/tags/Personal/"/>
    
    <category term="Blog" scheme="http://www.drjun.wang/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>LOFAR statistics</title>
    <link href="http://www.drjun.wang/2023/08/15/20230815-lofar-statistics/"/>
    <id>http://www.drjun.wang/2023/08/15/20230815-lofar-statistics/</id>
    <published>2023-08-15T17:17:01.000Z</published>
    <updated>2023-08-15T17:17:01.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Subband-Statistics-SST"><a href="#Subband-Statistics-SST" class="headerlink" title="Subband Statistics (SST)"></a>Subband Statistics (SST)</h2><p><strong>Subband statistics</strong> involve the analysis of data within specific frequency subbands. LOFAR’s observational frequency range is divided into numerous subbands, each covering a narrow segment of the spectrum. </p><p>For example, a typical LOFAR LBA array contains 96 dual-polarized antennas. Each polarization unit records antenna feedback from 0-100 MHz. As shown in the figure below, we present the SST data for a LBA antenna array with 192 polarized signals. In the figure, we can see that most of the spectral data is relatively concentrated, and only a small portion of the data is abnormal, which indicate the antenna is either broken or down.</p><div style="text-align: center;">    <img src="/figs/20230815-lofar-statistics.assets/20230929_181944_LBA_SB300_vb.png" alt="LBA SST" width="500"></div><p>This  SST data allows for detailed spectral analysis and aids in distinguishing between different types of signals.</p><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><p><strong>Spectral Analysis</strong>: By examining the data within each subband, astronomers and engineers can identify the distribution of signals across different frequencies, which is crucial for understanding the spectral characteristics of various astronomical sources.</p><p><strong>Noise Evaluation</strong>: SST help in assessing and mitigating noise levels within specific frequency ranges, enhancing the overall quality of the signal.</p><p><strong>Quality Control</strong>: Analyzing subband data allows for the detection and correction of anomalies or distortions, ensuring that the data used for further analysis is accurate and reliable.</p><h2 id="Beamlet-Statistics-BST"><a href="#Beamlet-Statistics-BST" class="headerlink" title="Beamlet Statistics (BST)"></a>Beamlet Statistics (BST)</h2><p><strong>Beamlet statistics</strong> refer to the analysis of data collected through multiple small beams formed using beamforming techniques. LOFAR employs phased array technology to combine signals from different antennas to create these narrow directional beams, known as beamlets.</p><p>The following image shows the BST data image of the LOFAR LBA antenna pointing toward the sun. In the figure around 15:00, we can see solar storms in the 40-80 MHz range.</p><div style="text-align: center;">    <img src="/figs/20230815-lofar-statistics.assets/20230723_BST_LBA.png" alt="LBA BST" width="500"></div><h3 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h3><ul><li><strong>Directional Analysis</strong>:: Each beamlet points in a different direction in the sky. By analyzing data from various beamlets, scientists can map the spatial distribution of signals, identifying the direction and location of astronomical sources.</li><li><strong>Signal Enhancement</strong>:: Beamlet statistics enable the detection and amplification of signals from specific directions while suppressing interference from other directions, thus improving the clarity and strength of the observed signals.</li><li><strong>Source Localization</strong>:: By combining data from multiple beamlets, researchers can accurately pinpoint the position of astronomical events or sources, aiding in their detailed study.</li></ul><h2 id="Crosslet-Statistics-xst"><a href="#Crosslet-Statistics-xst" class="headerlink" title="Crosslet Statistics (xst)"></a>Crosslet Statistics (xst)</h2><p><strong>Crosslet statistics</strong> involve the analysis of cross-correlation data between different antenna pairs. Cross-correlation is a fundamental technique in radio interferometry, which LOFAR uses to achieve high spatial resolution and sensitivity by measuring the phase differences between signals received at different antennas.</p><p>The figure below, shows the image data of the XST data of the LBA with the X and Y axes for the X and Y polarization of the antenna, respectively. The yellow diagonal lines in the figure represent the autocorrelation results for the XX and YY polarizations of the antenna.</p><div style="text-align: center;">    <img src="/figs/20230815-lofar-statistics.assets/20230929_181944_LBA_SB300_vb.png" alt="LBA XST" width="500"></div><h3 id="Applicationts"><a href="#Applicationts" class="headerlink" title="Applicationts"></a>Applicationts</h3><ul><li><strong>Interferometric Imaging</strong>: Crosslet statistics are crucial for reconstructing high-resolution images of astronomical objects. By analyzing the cross-correlated data, scientists can generate detailed maps of the observed sky.</li><li><strong>Phase Calibration</strong>: This involves the analysis of phase differences between signals from different antennas. Accurate phase calibration is essential for correcting errors caused by instrumental and atmospheric effects, ensuring the precision of the interferometric measurements.</li><li><strong>Data Integration</strong>: Crosslet statistics facilitate the integration of data from multiple antennas, enhancing the overall signal quality and enabling the detection of faint astronomical sources that might be missed by individual antennas.</li></ul><div style="text-align: center;">    <img src="/figs/20230815-lofar-statistics.assets/XST_calibration.gif" alt="LBA XST calibration" width="500"></div><table>    <tbody><tr>        <td>            <center>                <img src="/figs/20230815-lofar-statistics.assets/skyimage.png" width="400"> Fig 1            </center>        </td>    </tr>    <tr>         <td>            <center>                <img src="/figs/20230815-lofar-statistics.assets/groundimage.png" width="400"> Fig 3             </center>        </td>     </tr> </tbody></table><h2 id="Extra-interesting-plots"><a href="#Extra-interesting-plots" class="headerlink" title="Extra interesting plots"></a>Extra interesting plots</h2><h3 id="Lightning"><a href="#Lightning" class="headerlink" title="Lightning"></a>Lightning</h3><p>LOFAR is the first instrument capable of revealing the meter-scale physics that drives all fundamental lightning processes. The left picture below shows sky images of lightning phenomena, while the right picture presents BST of lighting recorded.</p><table>    <tbody><tr>        <td>            <center>                <img src="/figs/20230815-lofar-statistics.assets/lightning_xst.png" width="400"> Lightning sky image            </center>        </td>    </tr>    <tr>         <td>            <center>                <img src="/figs/20230815-lofar-statistics.assets/lightning_bst.png" width="400"> Lightning BST            </center>        </td>     </tr> </tbody></table><h3 id="Jupiter-Burst"><a href="#Jupiter-Burst" class="headerlink" title="Jupiter Burst"></a>Jupiter Burst</h3><p>In 1955, Bernard Burke and Kenneth Franklin discovered that Jupiter emits bursts of radio waves at a frequency of 22.2 MHz. The period of these bursts matched the rotation of the planet, and they used this information to determine a more precise value for Jupiter’s rotation rate. </p><p>This kind of burst is influenced by the interaction of Jupiter’s moon <strong>Io</strong> with Jupiter’s magnetic field. </p><table>    <tbody><tr>        <td>            <center>                <img src="/figs/20230815-lofar-statistics.assets/Jupiter_xst.png" width="400"> Jupiter sky image            </center>        </td>    </tr>    <tr>         <td>            <center>                <img src="/figs/20230815-lofar-statistics.assets/Jupiter_bst.png" width="400"> Jupiter BST             </center>        </td>     </tr> </tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;Subband-Statistics-SST&quot;&gt;&lt;a href=&quot;#Subband-Statistics-SST&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Personal" scheme="http://www.drjun.wang/tags/Personal/"/>
    
    <category term="Blog" scheme="http://www.drjun.wang/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Astronomical coordinate systems</title>
    <link href="http://www.drjun.wang/2023/03/21/20230321-Astro-coordinate/"/>
    <id>http://www.drjun.wang/2023/03/21/20230321-Astro-coordinate/</id>
    <published>2023-03-21T15:48:00.000Z</published>
    <updated>2023-03-21T15:48:00.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>在天文学中，有几种常用的坐标系，用于描述天体在天空中的位置。每种坐标系都有其独特的用途和适用范围。在这里，我总结了及总常见的天文学坐标系。</p><p>在详细讨论天球坐标之前，有必要先了解一下天球的概念。简单来说，天球是一个围绕地球的假想球体，代表从我们星球上看到的整个天空。当地球自转时，恒星和其他物体似乎在天球上移动。</p><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/tianqiu00.jpg" alt="ECEF (Earth-centered, Earth-fixed coordinate system)" width="500"></div><p>以下是天球上的一些重要参考点和参考线。</p><blockquote><p>天赤道：地球赤道平面与天球相交的圆。就像地球赤道一样，它将天球分为北半球和南半球。<br>黄道：地球轨道平面穿过天球的圆。由于地轴倾斜，黄道和天赤道彼此成约23.5°的角度。<br>北天极：天球上位于地球北极正上方的点，地球轴与天球相交。它是天空中的一个固定点，所有星星看起来都围绕它以逆时针方向旋转。<br>南天极：天球上位于地球南极正上方的点，地球轴与天球相交。与北天极类似，它是一个固定点，恒星看起来绕着它顺时针方向旋转。<br>天顶：观察者正上方的点。<br>天底：观察者正下方的点，与天顶相对。<br>春分点（白羊宫第一点）：太阳在春分穿过天赤道的点。</p></blockquote><p>现在，我们开始介绍下天文学中使用的主要坐标系。</p><h2 id="1-地理坐标系（Geographic-Coordinate-System，GCS）和-地球坐标系-Terrestrial-Reference-System-TRS"><a href="#1-地理坐标系（Geographic-Coordinate-System，GCS）和-地球坐标系-Terrestrial-Reference-System-TRS" class="headerlink" title="1. 地理坐标系（Geographic Coordinate System，GCS）和 地球坐标系 (Terrestrial Reference System, TRS)"></a>1. 地理坐标系（Geographic Coordinate System，GCS）和 地球坐标系 (Terrestrial Reference System, TRS)</h2><p>Terrestrial Reference System (TRS) 和 Geographic Coordinate System (GCS) 都是地理定位系统，用于描述地球表面上点的位置。</p><h3 id="1-1-Terrestrial-Reference-System-TRS"><a href="#1-1-Terrestrial-Reference-System-TRS" class="headerlink" title="1.1 Terrestrial Reference System (TRS)"></a>1.1 Terrestrial Reference System (TRS)</h3><p>TRS 是一个三维笛卡尔坐标系，用于全球导航卫星系统 (GNSS) 例如 GPS, 北斗，GLONASS，Galileo 等。</p><blockquote><p>地球的质心（地心）作为原点。<br>X 轴位于赤道平面内，穿过原点，从180°经度（负）延伸到本初子午线（正）。<br>Y 轴指向 90° 东经方向.<br>Z 轴指向地球自转轴（北极方向）。</p></blockquote><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/gcs_trs.png" alt="GCS和TRS坐标系统" width="500"></div><h3 id="1-2-Geographic-Coordinate-System-GCS"><a href="#1-2-Geographic-Coordinate-System-GCS" class="headerlink" title="1.2 Geographic Coordinate System (GCS)"></a>1.2 Geographic Coordinate System (GCS)</h3><p>GCS 使用经度、纬度和高度（或海拔）来描述地球表面点的位置, 广泛用于地图、航海和日常地理定位。</p><blockquote><p>经度 (Longitude)：测量从本初子午线（通过英国格林尼治的子午线）向东或向西的角度，范围从 0° 到 180° 东/西。<br>纬度 (Latitude)：测量从赤道向北或向南的角度，范围从 0° 到 90° 北/南。<br>高度 (Altitude)：测量地球表面点相对于海平面的高度。</p></blockquote><p>相对于纬度和经度显示的 ECEF 坐标（x,y,z）:</p><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/ECEF.svg" alt="ECEF (Earth-centered, Earth-fixed coordinate system)" width="500"></div><h2 id="2-赤道坐标系（Equatorial-coordinate-system）"><a href="#2-赤道坐标系（Equatorial-coordinate-system）" class="headerlink" title="2.赤道坐标系（Equatorial coordinate system）"></a>2.赤道坐标系（Equatorial coordinate system）</h2><p>赤道坐标系统描述了天体相对于天赤道的位置。它使用两个主要坐标：赤纬和赤经。</p><blockquote><p>赤纬（Dec）测量天体赤道以北或以南物体的角距离。赤纬度相当于地球纬度。它以度数表示，范围从+90°（北天极）到-90°（南天极）。</p></blockquote><blockquote><p>赤经（RA）测量物体从春分点沿天赤道向东方向的角距离。赤经相当于地球经度。由于历史原因，它不是以度表示，而是以时、分、秒表示。对于地球上的观察者来说，天空在24小时内“转动”360°，或者在一小时内“转动”15°。因此，天赤道一周（360°）对应赤经24小时，赤经1小时等于15°。</p></blockquote><p>赤道坐标系统可以是以地球为中心的（如上图所示）和以观测者为中心的。许多星图使用以地球为中心的赤道坐标系统。</p><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/equ_cs.jpg" alt="Equatorial coordinate system" width="500"></div><h2 id="3-地平坐标系-Horizontal-Coordinate-System"><a href="#3-地平坐标系-Horizontal-Coordinate-System" class="headerlink" title="3. 地平坐标系 (Horizontal Coordinate System)"></a>3. 地平坐标系 (Horizontal Coordinate System)</h2><p>以观测者所在地为中心点，所在地的地平线作为基础平面，，描述天体在当地天空中的位置。</p><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/hcs02.jpg" alt="Horizontal Coordinate System" width="500"></div><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/hcs.png" alt="Horizontal coordinate system" width="500"></div><p>地平坐标系统由两个夹角来定义一个天体位置的极座标：</p><blockquote><p>高度角（Altitude, Alt）或仰角又称地平纬度，是天体和观测者所在地的地平线的夹角。</p></blockquote><blockquote><p>方位角（Azimuth, Az）又称地平经度，是沿着地平线测量的角度. 一般指称的方位角是以正北方为0度起点, 顺时钟向东方测量。</p></blockquote><p>因此地平坐标系有时也被称为高度/方位（Alt/Az）坐标系统。</p><h2 id="4-黄道坐标系-Ecliptic-Coordinate-System"><a href="#4-黄道坐标系-Ecliptic-Coordinate-System" class="headerlink" title="4. 黄道坐标系 (Ecliptic Coordinate System)"></a>4. 黄道坐标系 (Ecliptic Coordinate System)</h2><p>黄道坐标系以黄道平面为基准，用于描述天体相对于黄道的位置。它使用两个主要坐标：黄纬和黄经。</p><blockquote><p>黄纬测量黄道面以北或以南的物体的角距离。它以+90°（北黄极）到-90°（南黄极）的度数表示。</p></blockquote><blockquote><p>黄经测量春分点以东的物体沿黄道平面的角距离。它以度数表示，从0°到360°；</p></blockquote><p>黄道一整圈对应于一年。例如，如果一个物体的黄经为90°，则意味着它位于沿着黄道春分点以东四分之一的位置。</p><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/ecs.jpg" alt="Ecliptic Coordinate System" width="500"></div><h2 id="5-银道坐标系-Galactic-Coordinate-System"><a href="#5-银道坐标系-Galactic-Coordinate-System" class="headerlink" title="5. 银道坐标系 (Galactic Coordinate System)"></a>5. 银道坐标系 (Galactic Coordinate System)</h2><p>银道坐标系，是以太阳为中心，并且以银河系明显排列群星的平面为基准的天球坐标系统，它的“赤道”是银河平面。相似于地理坐标，银道坐标系的位置也有经度和纬度。</p><blockquote><p>银经 (Galactic Longitude, l)：从银河系中心向外测量的角度，范围从0°到360°。<br>银纬 (Galactic Latitude, b)：从银河平面向上或向下测量的角度，范围从+90°到-90°。</p></blockquote><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/Galactic_coordinates.jpeg" alt="Galactic Coordinate System" width="500"></div><h2 id="6-uvw-坐标系"><a href="#6-uvw-坐标系" class="headerlink" title="6. uvw 坐标系"></a>6. uvw 坐标系</h2><p>uvw 坐标系 是一种用于描述干涉仪测量数据的坐标系统。u, v, w 轴是指向基线方向的坐标轴，其中基线是指干涉仪中两个天线之间的向量。</p><blockquote><p>w 轴：指向天球的相位中心（目标天体方向）。<br>u 轴 和 v 轴：在垂直于 w 轴的平面上，通常选择 u 轴平行于本初子午线平面，v 轴在其正交平面上。</p></blockquote><div style="text-align: center;">    <img src="/figs/20230321-Astro-coordinate.assets/uvw01.png" alt="UVW Coordinate System" width="500"></div><h2 id="7-lmn-坐标系"><a href="#7-lmn-坐标系" class="headerlink" title="7. lmn 坐标系"></a>7. lmn 坐标系</h2><p>lmn 坐标系 是一种与天球坐标系相关的直角坐标系统，用于描述天空中的方向。</p><blockquote><p>n 轴：通常等于1，表示在相位中心方向的单位矢量。<br>l 轴：相对于相位中心在赤经方向上的投影。<br>m 轴：相对于相位中心在赤纬方向上的投影。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在天文学中，有几种常用的坐标系，用于描述天体在天空中的位置。每种坐标系都有其独特的用途和适用范围。在这里，我总结了及总常见的天文学坐标系。&lt;/p&gt;
&lt;p&gt;在详细讨论天球坐标之</summary>
      
    
    
    
    <category term="Research" scheme="http://www.drjun.wang/categories/Research/"/>
    
    
    <category term="Astronomy" scheme="http://www.drjun.wang/tags/Astronomy/"/>
    
  </entry>
  
  <entry>
    <title>Docker and Singularity</title>
    <link href="http://www.drjun.wang/2022/09/25/20220925-docker-singularity/"/>
    <id>http://www.drjun.wang/2022/09/25/20220925-docker-singularity/</id>
    <published>2022-09-25T19:42:31.000Z</published>
    <updated>2022-09-25T19:42:31.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Docker-and-Singularity"><a href="#Docker-and-Singularity" class="headerlink" title="Docker and Singularity"></a>Docker and Singularity</h1><h2 id="Docker-安装和基本配置"><a href="#Docker-安装和基本配置" class="headerlink" title="Docker 安装和基本配置"></a>Docker 安装和基本配置</h2><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><pre><code>$ curl -fsSL test.docker.com -o get-docker.sh$ sudo sh get-docker.sh</code></pre><h3 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h3><pre><code>$ sudo systemctl enable docker$ sudo systemctl start docker</code></pre><h3 id="建立-docker-用户组-免sudo运行"><a href="#建立-docker-用户组-免sudo运行" class="headerlink" title="建立 docker 用户组,免sudo运行"></a>建立 docker 用户组,免sudo运行</h3><p>默认情况下，docker 命令会使用 Unix socket 与 Docker 引擎通讯。而只有 root 用户和 docker 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 root 用户。因此，更好地做法是将需要使用 docker 的用户加入 docker 用户组。<br>建立 docker 组：</p><pre><code>$ sudo groupadd docker</code></pre><p>将当前用户加入 docker 组：</p><pre><code>$ sudo usermod -aG docker $USER</code></pre><p>退出当前终端并重新登录，进行如下测试。</p><h3 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h3><pre><code>$ docker run --rm hello-worldUnable to find image 'hello-world:latest' locallylatest: Pulling from library/hello-worldb8dfde127a29: Pull completeDigest: sha256:308866a43596e83578c7dfa15e27a73011bdd402185a84c5cd7f32a88b501a24Status: Downloaded newer image for hello-world:latestHello from Docker!This message shows that your installation appears to be working correctly.To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.    (amd64) 3. The Docker daemon created a new container from that image which runs the    executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it    to your terminal.To try something more ambitious, you can run an Ubuntu container with:    $ docker run -it ubuntu bashShare images, automate workflows, and more with a free Docker ID:  https://hub.docker.com/   For more examples and ideas, visit:   https://docs.docker.com/get-started/</code></pre><p>若能正常输出以上信息，则说明安装成功。</p><h2 id="Docker的基本使用"><a href="#Docker的基本使用" class="headerlink" title="Docker的基本使用"></a>Docker的基本使用</h2><h3 id="启动docker-container"><a href="#启动docker-container" class="headerlink" title="启动docker container"></a>启动docker container</h3><pre><code>$ docker run -it --rm -v /home/jwang/Desktop/:/home/jovyan/work/test gitlab-registry.in2p3.fr/epta/docker_singularity:master_std /bin/bash# -v   参数： 挂载/home/jwang/Desktop/至/home/jovyan/work/test的目录，注意使用绝对路径# --rm 参数： 在容器终止运行后自动删除容器文件# -it  参数：容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器。# /bin/bash：容器启动以后，内部第一个执行的命令。这里是启动 Bash，保证用户可以使用 Shell</code></pre><h3 id="镜像image有关命令"><a href="#镜像image有关命令" class="headerlink" title="镜像image有关命令"></a>镜像image有关命令</h3><pre><code>$ docker pull ubuntu:22.04 # 获取一个新的镜像ubuntu:22.04$ docker image ls #列出本机的所有 image 文件$ docker rmi ubuntu:22.04  #删除本机 image 文件ubuntu:22.04$ docker search httpd # 查找镜像httpd</code></pre><h3 id="容器container有关命令"><a href="#容器container有关命令" class="headerlink" title="容器container有关命令"></a>容器container有关命令</h3><pre><code>$ docker ps -a  # 查看所有容器列表$ docker run -it ubuntu /bin/bash # 启动容器，并以命令行模式进入该容器$ docker ps -a # 查出容器的 ID$ docker rm [containerID] # 删除指定的容器</code></pre><h4 id="docker-start"><a href="#docker-start" class="headerlink" title="docker start"></a>docker start</h4><p>前面的docker run命令是新建容器，每运行一次，就会新建一个容器。同样的命令运行两次，就会生成两个一模一样的容器文件。如果希望重复使用容器，就要使用docker start命令，它用来启动已经生成、已经停止运行的容器文件。</p><pre><code>$ docker start [containerID]</code></pre><h4 id="docker-stop"><a href="#docker-stop" class="headerlink" title="docker stop"></a>docker stop</h4><p>前面的docker kill命令终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号。而docker stop命令也是用来终止容器运行，相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号。</p><pre><code>$ docker stop [containerID]</code></pre><p>这两个信号的差别是，应用程序收到 SIGTERM 信号以后，可以自行进行收尾清理工作，但也可以不理会这个信号。如果收到 SIGKILL 信号，就会强行立即终止，那些正在进行中的操作会全部丢失。</p><h4 id="docker-logs"><a href="#docker-logs" class="headerlink" title="docker logs"></a>docker logs</h4><p>docker container logs命令用来查看 docker 容器的输出，即容器里面 Shell 的标准输出。如果docker run命令运行容器的时候，没有使用-it参数，就要用这个命令查看输出。</p><pre><code>$ docker logs [containerID]</code></pre><h4 id="docker-container-exec"><a href="#docker-container-exec" class="headerlink" title="docker container exec"></a>docker container exec</h4><p>docker container exec命令用于进入一个正在运行的 docker 容器。如果docker run命令运行容器的时候，没有使用-it参数，就要用这个命令进入容器。一旦进入了容器，就可以在容器的 Shell 执行命令了。</p><pre><code>$ docker container exec -it [containerID] /bin/bash</code></pre><h2 id="Singularity-安装和基本配置"><a href="#Singularity-安装和基本配置" class="headerlink" title="Singularity 安装和基本配置"></a>Singularity 安装和基本配置</h2><h3 id="Singularity-安装"><a href="#Singularity-安装" class="headerlink" title="Singularity 安装"></a>Singularity 安装</h3><pre><code># 下载并安装Go-lang$ sudo add-apt-repository ppa:longsleep/golang-backports$ sudo apt update$ sudo apt install golang-go#下载并解压Singularity$ export VERSION=3.7.0 &amp;&amp; # adjust this as necessary \    wget https://github.com/hpcng/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz &amp;&amp; \    tar -xzf singularity-${VERSION}.tar.gz &amp;&amp; \    cd singularity#编译Singularity$ ./mconfig &amp;&amp; \    make -C builddir &amp;&amp; \    sudo make -C builddir install</code></pre><p>检查是否安装成功</p><pre><code>$ singularityUsage:  singularity [global options...] &lt;command&gt;Available Commands:  build       Build a Singularity image  cache       Manage the local cache  capability  Manage Linux capabilities for users and groups  config      Manage various singularity configuration (root user only)  delete      Deletes requested image from the library  exec        Run a command within a container  inspect     Show metadata for an image  instance    Manage containers running as services  key         Manage OpenPGP keys  oci         Manage OCI containers  overlay     Manage an EXT3 writable overlay image  plugin      Manage Singularity plugins  pull        Pull an image from a URI  push        Upload image to the provided URI  remote      Manage singularity remote endpoints, keyservers and OCI/Docker registry credentials  run         Run the user-defined default command within a container  run-help    Show the user-defined help for an image  search      Search a Container Library for images  shell       Run a shell within a container  sif         siftool is a program for Singularity Image Format (SIF) file manipulation  sign        Attach digital signature(s) to an image  test        Run the user-defined tests within a container  verify      Verify cryptographic signatures attached to an image  version     Show the version for SingularityRun 'singularity --help' for more detailed usage information.</code></pre><h3 id="Sigularity镜像image"><a href="#Sigularity镜像image" class="headerlink" title="Sigularity镜像image"></a>Sigularity镜像image</h3><p>Singularity 镜像文件(Singularity Image File, sif)是一种内容只读的文件格式，其文件内容不能被修改。</p><p>Singularity 可以从 Singularity Hub (以 shub:// 开头)或者 Docker Hub (以 docker:// 开头)来获取镜像</p><pre><code>$ sudo singularity pull docker://ubuntu # 获取预编译镜像，完成后会在本地目录生成文件 &lt;image-name&gt;_&lt;tag&gt;.sif$ singularity -d build lolcow.simg shub://GodloveD/lolcow # build 镜像，会在本地目录 build 出镜像$ sudo singularity instance list # 查看运行的容器实例$ sudo singularity shell -B /opt:/opt ubuntu.simg # 绑定目录 -B，类似于 docker 的 -v 参数$ singularity exec --bind /mnt/nfs:/mnt/nfs ubuntu.latest.sif /bin/bash script.sh 使用--bind选项映射主机目录到容器内</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Docker-and-Singularity&quot;&gt;&lt;a href=&quot;#Docker-and-Singularity&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Software" scheme="http://www.drjun.wang/tags/Software/"/>
    
    <category term="Linux" scheme="http://www.drjun.wang/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>LOFAR introduction</title>
    <link href="http://www.drjun.wang/2022/07/05/20220705-lofar-concept/"/>
    <id>http://www.drjun.wang/2022/07/05/20220705-lofar-concept/</id>
    <published>2022-07-05T10:54:36.000Z</published>
    <updated>2022-07-05T10:54:36.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Introduction-to-LOFAR"><a href="#Introduction-to-LOFAR" class="headerlink" title="Introduction to LOFAR"></a>Introduction to LOFAR</h2><p>The **Low-Frequency Array ** <a href="https://www.lofar.eu/">LOFAR</a> is a cutting-edge radio telescope network designed to observe the universe at low frequencies, ranging from 10 MHz to 240 MHz. LOFAR is unique due to its large number of antennas spread across Europe, allowing it to achieve high resolution and sensitivity for studying cosmic phenomena.</p><p>LOFAR was conceived and constructed by <a href="https://www.astron.nl/">ASTRON</a>, the Netherlands Institute for Radio Astronomy. Its primary motivation was to explore the universe in low-frequency radio waves, a spectrum relatively unexplored due to technological limitations. LOFAR’s design takes advantage of recent advancements in digital signal processing and high-speed computing.</p><p>LOFAR consists of a central core located in Exloo, Netherlands, and an extensive network of international stations. The central core has the highest density of antennas, while the international stations spread out to provide the array with its large baseline, enhancing the resolution. The array includes approximately 50,000 antennas organized in stations.</p><h2 id="LOFAR-Stations"><a href="#LOFAR-Stations" class="headerlink" title="LOFAR Stations"></a>LOFAR Stations</h2><p>LOFAR comprises a network of radio antennas distributed across Europe. The array is divided into Dutch core and remote stations, as well as international stations. This extensive network enhances the array’s baseline, providing high-resolution and sensitive observations of the universe in low-frequency radio waves.</p><div style="text-align: center;">    <img src="/figs/20220705-lofar-concept.assets/LOFARmap.png" alt="LOFAR Station across Europe" width="500"></div><h3 id="Station-across-the-Europe"><a href="#Station-across-the-Europe" class="headerlink" title="Station across the Europe"></a>Station across the Europe</h3><div style="text-align: center;">    <img src="/figs/20220705-lofar-concept.assets/LOFAR-station_config.png" alt="LOFAR Station configuration" width="500"></div><h4 id="Core-Stations-CS"><a href="#Core-Stations-CS" class="headerlink" title="Core Stations (CS)"></a>Core Stations (CS)</h4><p>The core of LOFAR is situated in the northeast of the Netherlands, near the village of Exloo. This core area has the highest density of antennas, crucial for the array’s sensitivity and resolution.</p><p>These 24 core stations are located within a radius of approximately 2 kilometers around the central processing hub in Exloo. The dense concentration of antennas in this area enables detailed imaging and high sensitivity.</p><h4 id="Remote-Stations-RS"><a href="#Remote-Stations-RS" class="headerlink" title="Remote Stations (RS)"></a>Remote Stations (RS)</h4><p>Beyond the core, the Netherlands hosts remote stations that expand the array’s baseline and enhance its resolution. There are 14 remote stations distributed across the Netherlands, each situated approximately 50 to 100 kilometers from the core. These stations help extend the observational baseline, improving the array’s ability to detect fine details in the radio sky.</p><h4 id="International-LOFAR-Stations-IS"><a href="#International-LOFAR-Stations-IS" class="headerlink" title="International LOFAR Stations (IS)"></a>International LOFAR Stations (IS)</h4><p>International stations significantly expand LOFAR’s observational capabilities by increasing the array’s baseline across Europe. LOFAR’s 14 international stations are currently located in seven countries, with six stations in Germany and three in Poland. France, Sweden, the UK, Ireland and Lithuania each have one station. </p><p>The presence of international sites has greatly improved the LOFAR baseline, with a maximum baseline of 2,000 km.</p><h5 id="Germany"><a href="#Germany" class="headerlink" title="Germany"></a>Germany</h5><p>Germany is a key participant in the LOFAR network, with several stations managed by the German Long Wavelength Consortium <a href="https://www.glowconsortium.de/">GLOW</a>.</p><blockquote><p>DE601 (Effelsberg): Operated by the Max-Planck-Institut für Radioastronomie, Bonn.<br>DE602 (Unterweilenbach): Operated by FAU Erlangen-Nürnberg, JMU Würzburg and MPA Garching<br>DE603 (Tautenburg): Operated by the Thuringian State Observatory.<br>DE604 (Bornim): Operated by Leibniz-Institut für Astrophysik, Potsdam.<br>DE605 (Jülich): Operated by Ruhr-Universität Bochum, Forschungszentrum Jülich and<br>DE609 (Norderstedt): Operated by Universität Hamburg and Universität Bielefeld.</p></blockquote><h5 id="France"><a href="#France" class="headerlink" title="France"></a>France</h5><p>France’s LOFAR stations add to the array’s southwestern coverage.</p><blockquote><p>FR606 (Nançay): Operated by the Nançay Radio Observatory.</p></blockquote><h5 id="Sweden"><a href="#Sweden" class="headerlink" title="Sweden"></a>Sweden</h5><p>Sweden’s LOFAR station helps extend the array’s reach to the north.</p><blockquote><p>SE607 (Onsala): Operated by the Onsala Space Observatory.</p></blockquote><h5 id="United-Kingdom"><a href="#United-Kingdom" class="headerlink" title="United Kingdom"></a>United Kingdom</h5><p>The UK also hosts LOFAR stations, contributing to the array’s western extension.</p><blockquote><p>UK608 (Chilbolton): STFC Rutherford Appleton Laboratory, constructed in 2010.</p></blockquote><h5 id="Poland"><a href="#Poland" class="headerlink" title="Poland"></a>Poland</h5><p>Poland hosts three LOFAR stations, enhancing the array’s eastern baseline.</p><blockquote><p>PL610 (Borówiec): Operated by the Space Research Centre of Polish Academy of Sciences.<br>PL611 (Lazy): Opetated by Jagiellonian University.<br>PL612 (Baldy): Opetated by the University of Warmia and Mazury in Olsztyn</p></blockquote><h5 id="Ireland"><a href="#Ireland" class="headerlink" title="Ireland"></a>Ireland</h5><p>The LOFAR Station in Ireland is run under the <a href="https://lofar.ie/">I-LOFAR</a> consortium, which is lead by Trinity College Dublin.<br>Ireland has also joined the LOFAR network, contributing to its westernmost extension.</p><blockquote><p>IE613 (Birr): Operated by Trinity College Dublin at the Rosse Observatory on the grounds of Birr Castle.</p></blockquote><h5 id="Latvia"><a href="#Latvia" class="headerlink" title="Latvia"></a>Latvia</h5><blockquote><p>LV614 (Ventspils): at the site of Ventspils International Radio Astronomy Centre in Irbene</p></blockquote><h3 id="Constitution-of-the-station"><a href="#Constitution-of-the-station" class="headerlink" title="Constitution of the station"></a>Constitution of the station</h3><p>LOFAR uses two main types of antennas: Low Band Antennas (LBA) and High Band Antennas (HBA).</p><h4 id="Low-Band-Antennas-LBA"><a href="#Low-Band-Antennas-LBA" class="headerlink" title="Low Band Antennas (LBA)"></a>Low Band Antennas (LBA)</h4><ul><li>Frequency Range: 10-90 MHz<br>LBAs are simple, inverted V-shaped dipoles. Each LBA consists of two perpendicular dipoles, providing sensitivity to different polarizations of incoming radio waves. LBAs are distributed in a quasi-random layout to minimize interference patterns and enhance the overall resolution.</li></ul><div style="text-align: center;">    <img src="/figs/20220705-lofar-concept.assets/LBA_sideview_sketch.png" alt="Sideview of LOFAR LBA antenna" width="500"></div><h4 id="High-Band-Antennas-HBA"><a href="#High-Band-Antennas-HBA" class="headerlink" title="High Band Antennas (HBA)"></a>High Band Antennas (HBA)</h4><ul><li>Frequency Range: 110-240 MHz<br>HBAs are more complex, comprising phased array <strong>tiles</strong>. Each tile consists of 16 dual-polarized elements, arranged in a 4x4 grid.HBA tiles are grouped into larger clusters within each station, allowing for electronic beam steering and increased sensitivity.</li></ul><div style="text-align: center;">    <div style="display: flex; flex-wrap: wrap; justify-content: center; gap: 10px;">        <div style="border: 1px solid #000; padding: 10px;">            <img src="/figs/20220705-lofar-concept.assets/HBA_tile_sketch.png" alt="LOFAR HBA tile" width="200">        </div>        <div style="border: 1px solid #000; padding: 10px;">            <img src="/figs/20220705-lofar-concept.assets/HBA_in_detail.png" alt="LOFAR HBA Element in details" width="200">        </div>        <div style="border: 1px solid #000; padding: 10px;">            <img src="/figs/20220705-lofar-concept.assets/HBA_in_lab.png" alt="LOFAR HBA element in labortory" width="200">        </div>        <div style="border: 1px solid #000; padding: 10px;">            <img src="/figs/20220705-lofar-concept.assets/HBA_in_field.png" alt="LOFAR HBA element in field" width="200">        </div>    </div></div><h4 id="Cabinet-and-subracks"><a href="#Cabinet-and-subracks" class="headerlink" title="Cabinet and subracks"></a>Cabinet and subracks</h4><p>Each LOFAR station includes one cabinet that house the essential electronics needed to manage the station’s antennas. A typical LOFAR cabinet contains 3 subracks, each dedicated to specific tasks within the overall signal processing and transmission workflow. </p><p>The the first two subracks receive raw signals from the LBA and HBA antennas, and perform initial processing of the radio signals, including amplification, filtering, and digitization. The third subrack, called the control subrack, is primarily used for control and monitoring functions.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;Introduction-to-LOFAR&quot;&gt;&lt;a href=&quot;#Introduction-to-LOFAR&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    <category term="Research" scheme="http://www.drjun.wang/categories/Research/"/>
    
    
    <category term="LOFAR" scheme="http://www.drjun.wang/tags/LOFAR/"/>
    
    <category term="GLOW" scheme="http://www.drjun.wang/tags/GLOW/"/>
    
  </entry>
  
  <entry>
    <title>命令行下执行latex</title>
    <link href="http://www.drjun.wang/2021/12/07/20211207-latex-process/"/>
    <id>http://www.drjun.wang/2021/12/07/20211207-latex-process/</id>
    <published>2021-12-07T19:21:21.000Z</published>
    <updated>2021-12-07T19:21:21.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>为了编译出出正确的pdf文件，需要执行4条命令完成整个编译过程。<br>编译命令及输出</p><pre><code>$ pdflatex draft.tex   #目录下会生成draft.aux、draft.log、draft.pdf三个个文件。draft.aux有用。 draft.pdf文件内参考文献，没有正确显示出来。只显示"?"，表明还没有引用$ bibtex bb#生成 draft.bbl，draft.blg两个文件。这两个文件都是字符文件，可查看。其中*.bbl内容就是要插入到*.tex中去的。注意命令中，文件名字是draft，而不是draft.tex$ pdflatex draft.tex#无新文件生成，但查看draft.pdf，其中的参考文献已经显示出来，但正文中对参考文献的引用依然显示为"?"，没有正确（产生交叉）引用$ pdflatex draft.tex#此时，用evince draft.pdf查看生成的pdf，已经是一份正式的档了。</code></pre><h2 id="参考文献引用"><a href="#参考文献引用" class="headerlink" title="参考文献引用"></a>参考文献引用</h2><p>bibtex 格式参考文献文件后缀为 <code>bib</code>，通过此种方式引入参考文献，可以方便利用文献软件进行管理. 其他的诸多好处可以在<a href="http://www.zhihu.com/question/23565739/answer/51511029">如何在LaTeX写作中管理参考文献?</a>中查看。</p><pre><code>xelatex main.tex# 参考文献编译bibtex main.auxxelatex main.texxelatex main.tex</code></pre><p>注意:</p><p>bibtex不是编译.tex文件的，也不是编译.bib文件的，而是编译.aux文件的。bibtex后面应该跟.aux文件. .bib, .bst 和 .aux的区别如下：</p><ol><li><strong>.bib就是参考文献数据文件</strong>  </li><li><strong>.bst一般由期刊或者杂志提供, bst设定了参考文献出现在文末的方式</strong></li><li><strong>.aux由编译tex文件得到，编译tex没错误的话会生成aux文件，aux文件包含了引用这些的信息</strong></li></ol><p>2.去掉容差报警的方法：</p><pre><code>\hbadness=10000\tolerance=10000 \hfuzz=150pt</code></pre><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>var options = {"narrow":false,"autoplay":true,"showlrc":3,"mode":"random","music":[{"title":"当爱已成往事","author":"李宗盛、林忆莲","url":"/file/dang_ai_yi_cheng_wang_shi.mp3","pic":"/file/dang_ai_yi_cheng_wang_shi.jpg","lrc":"/file/dang_ai_yi_cheng_wang_shi.lrc"}]};options.element = document.getElementById("aplayer1");var ap = new APlayer(options);window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;为了编译出出正确的pdf文件，需要执行4条命令完成整个编译过程。&lt;br&gt;编译命令及输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pdflatex draft.tex   
#目录下</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Latex" scheme="http://www.drjun.wang/tags/Latex/"/>
    
    <category term="Linux" scheme="http://www.drjun.wang/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下PDF文件处理</title>
    <link href="http://www.drjun.wang/2021/12/06/20211206-pdf-process/"/>
    <id>http://www.drjun.wang/2021/12/06/20211206-pdf-process/</id>
    <published>2021-12-06T21:20:24.000Z</published>
    <updated>2021-12-06T21:20:24.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-gs命令"><a href="#1-gs命令" class="headerlink" title="1. gs命令"></a>1. gs命令</h2><p>linux下可以直接用命令进行PDF的原生操作</p><p>使用命令：gs（GhostScript）</p><p>官网：<a href="https://www.ghostscript.com/">https://www.ghostscript.com/</a></p><p>安装该命令：<code>sudo apt-get install gs</code></p><h3 id="1-1-合并多个PDF为1个"><a href="#1-1-合并多个PDF为1个" class="headerlink" title="1.1 合并多个PDF为1个"></a>1.1 合并多个PDF为1个</h3><pre><code>gs -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=target.pdf -dBATCH 1.pdf 2.pdf ... n.pdf</code></pre><h3 id="1-2-单个PDF压缩"><a href="#1-2-单个PDF压缩" class="headerlink" title="1.2 单个PDF压缩"></a>1.2 单个PDF压缩</h3><pre><code>gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf-dPDFSETTINGS 参数描述：/prepress ：质量最好，文件最大/printer ：打印模式，推荐压缩/ebook ： 电子书模式，适合文本/screen ：文件最小，不推荐 </code></pre><h2 id="2-pdftk命令"><a href="#2-pdftk命令" class="headerlink" title="2. pdftk命令"></a>2. pdftk命令</h2><p>官网：<a href="http://www.pdflabs.com/docs/install-pdftk/">http://www.pdflabs.com/docs/install-pdftk/</a><br>安装该命令：<code>sudo snap install pdftk</code></p><h3 id="2-1-pdf文件合并"><a href="#2-1-pdf文件合并" class="headerlink" title="2.1 pdf文件合并"></a>2.1 pdf文件合并</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk in1.pdf in2.pdf <span class="token function">cat</span> output out.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-多个不同页面合并"><a href="#2-2-多个不同页面合并" class="headerlink" title="2.2 多个不同页面合并"></a>2.2 多个不同页面合并</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk A<span class="token operator">=</span>1.pdf B<span class="token operator">=</span>2.pdf C<span class="token operator">=</span>pdf <span class="token function">cat</span> A1-2 B2-3 C3 output abc.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3-旋转第一页"><a href="#2-3-旋转第一页" class="headerlink" title="2.3 旋转第一页"></a>2.3 旋转第一页</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk in.pdf <span class="token function">cat</span> 1E 2-end output out.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-4-加密（128位）"><a href="#2-4-加密（128位）" class="headerlink" title="2.4 加密（128位）"></a>2.4 加密（128位）</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf owner_pw pass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-5-加访问密码"><a href="#2-5-加访问密码" class="headerlink" title="2.5 加访问密码"></a>2.5 加访问密码</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf user_pw pass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-6-解密"><a href="#2-6-解密" class="headerlink" title="2.6 解密"></a>2.6 解密</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf input_pw pass output b.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-7-解压"><a href="#2-7-解压" class="headerlink" title="2.7 解压"></a>2.7 解压</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf uncompress<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-8-压缩"><a href="#2-8-压缩" class="headerlink" title="2.8 压缩"></a>2.8 压缩</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf compress<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-9-修复"><a href="#2-9-修复" class="headerlink" title="2.9 修复"></a>2.9 修复</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-10-切割"><a href="#2-10-切割" class="headerlink" title="2.10 切割"></a>2.10 切割</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf <span class="token function">cat</span> 1-end output b.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-11-分解成单页"><a href="#2-11-分解成单页" class="headerlink" title="2.11 分解成单页"></a>2.11 分解成单页</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf burst<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-Imagemagick命令"><a href="#3-Imagemagick命令" class="headerlink" title="3. Imagemagick命令"></a>3. Imagemagick命令</h2><p>官网：<a href="http://www.imagemagick.org/">http://www.imagemagick.org</a></p><p>安装方法：<code>sudo apt-get install imagemagick</code></p><h3 id="3-1-PDF-TO-JPG"><a href="#3-1-PDF-TO-JPG" class="headerlink" title="3.1 PDF TO JPG"></a>3.1 PDF TO JPG</h3><p><code>convert -verbose -colorspace RGB -resize 1800 -interlace none -density 300 -quality 100 XXX.pdf XXX.jpg</code></p><p>参数：<br>-resize 1800：设置输出图片的宽度为1800像素，清晰度高了很多<br>-density 300：打印分辨率为300<br>-quality 100：JPG的质量为100%</p><h3 id="3-2-JPG-TO-PDF"><a href="#3-2-JPG-TO-PDF" class="headerlink" title="3.2 JPG TO PDF"></a>3.2 JPG TO PDF</h3><p>转换单个JPG：<code>convert x.jpg x.pdf</code><br>转换多个JPG为1个PDF：<code>convert *.jpg x.pdf</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;1-gs命令&quot;&gt;&lt;a href=&quot;#1-gs命令&quot; class=&quot;headerlink&quot; title=&quot;1. gs命令&quot;&gt;&lt;/a&gt;1. gs命令&lt;/h2&gt;&lt;p&gt;li</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Linux" scheme="http://www.drjun.wang/tags/Linux/"/>
    
    <category term="PDF" scheme="http://www.drjun.wang/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>Ph.D. Thesis</title>
    <link href="http://www.drjun.wang/2021/12/05/20211205-phd-thesis/"/>
    <id>http://www.drjun.wang/2021/12/05/20211205-phd-thesis/</id>
    <published>2021-12-05T20:03:09.000Z</published>
    <updated>2021-12-05T20:03:09.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><center>** Ph.D. Thesis: Optimizing Analysis Standards for Pulsar Timing Arrays and GravitationalWave Detection **</center><br> <div class="row">    <embed src="https://astrondog.github.io/file/phd_thesis.pdf" width="100%" height="550" type="application/pdf"></div><br><p>This is a colorized version of my Ph.D. thesis. For an submitted version, please download through the <a href="https://pub.uni-bielefeld.de/record/2958421">Bielefeld University library portal</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;center&gt;** Ph.D. Thesis: Optimizing Analysis Standards for Pulsar Timing Arrays and Gravit</summary>
      
    
    
    
    <category term="Research" scheme="http://www.drjun.wang/categories/Research/"/>
    
    
    <category term="Pulsar" scheme="http://www.drjun.wang/tags/Pulsar/"/>
    
    <category term="PDF" scheme="http://www.drjun.wang/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>PTA White Noise Parameters</title>
    <link href="http://www.drjun.wang/2021/11/13/20211113-PTA-WN-Parameters/"/>
    <id>http://www.drjun.wang/2021/11/13/20211113-PTA-WN-Parameters/</id>
    <published>2021-11-13T15:18:09.000Z</published>
    <updated>2021-11-13T15:18:09.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="EFAC-and-EQUAD"><a href="#EFAC-and-EQUAD" class="headerlink" title="EFAC and EQUAD"></a>EFAC and EQUAD</h2><p>For pulsar timing purpose, ToAs can be created precisely by determining the phase offset between each observed pulse profile and a reference profile (known as standard template) through cross-correlation algorithms. Assuming that the intensity of the profile of an individual pulse, $P(t)$ is a shifted and scaled version of the template, $T(t)$, plus Gaussian measurement error $N(t)$, (for details, see <a href="https://ui.adsabs.harvard.edu/abs/1992RSPTA.341..117T/abstract">Taylor 1992</a>):</p><p><img src="/images/20211113-PTA-WN-Parameters.assets/001.png"><br>which can be expressed either in the time or in the phase domain within one folding period. $a$ is an arbitrary intensity shift, $b$ is the intensity scaling factor and $\tau$ is the phase offset.</p><p>The uncertainty in the ToA determination process is approximately the ratio of the pulse width, $W$, to the $S/N$, which is defined as the ratio of the power of a signal to the noise fluctuations. The ToA uncertainty can be expressed as (for further details, please refer to <a href="https://ui.adsabs.harvard.edu/abs/2012hpa..book.....L/abstract">Lorimer &amp; Kramer 2012</a>):</p><p><img src="/images/20211113-PTA-WN-Parameters.assets/002.png"></p><p>where $S_{\textrm{sys}}$ and $S_{\textrm{mean}}$ is the system equivalent temperature and the pulsar’s mean flux density, respectively. Here, $t_{\textrm{obs}}$ is the integration time, $\Delta f$ is the bandwidth and $P$ is the spin period of the pulsar.</p><p>Once the ToAs and their related uncertainties have been determined, a linear least-squares method is normally performed to estimate the pulsar parameters and generate timing residuals by minimizing the reduced chi-squared value, $\chi_r^2$, which effectively describes the goodness of fit of the model: </p><p><img src="/images/20211113-PTA-WN-Parameters.assets/003.png"></p><p>Notice that the least-squares timing model fits are performed on the basis of assuming radiometer noise to be the only source of error in the ToAs. However, this is not always the case, for some pulsars, the ToA uncertainties tend to be too small and thus yield large $\chi_r^2$ values. In addition, some pulsars, would also show a noticeable red spectral pattern in their residuals which worsen the least-squares model.</p><p>A conservative way to solve this problem is to increase the size of each errorbar until the reduced chi-squared turn to unity. Generally, this can be archived by either multiplying a constant factor, EFAC to account for possible mis-calibration from a particular system, or adding in quadrature a constant additional uncertainty value, EQUAD, to make up additional sources of time independent noise, such as the intrinsic jitter noise inherited from pulse emission perturbations, which should be pulsar-dependent and observing-system-independent.</p><p>The revised ToA uncertainties, $\hat{\sigma}_{\textrm{ToA}}$, can then be expressed as:</p><p><img src="/images/20211113-PTA-WN-Parameters.assets/004.png"></p><h3 id="Brief-summary"><a href="#Brief-summary" class="headerlink" title="Brief summary:"></a>Brief summary:</h3><p><strong>EFAC</strong> is introdueced to account for possible mis-calibration of this <strong>radiometer noise</strong>, acting as a <strong>multiplier</strong> for all the TOA error bars for a given pulsar, observed with a particular system.</p><p><strong>EQUAD</strong>, added in <strong>quadrature</strong>,  is used to represent some additional source of time independent noise, (i.e. <strong>jitter noise</strong>).  A single EQUAD parameter is available to include for all TOAs</p><h2 id="ECORR"><a href="#ECORR" class="headerlink" title="ECORR"></a>ECORR</h2><p>ECORR, namely the ‘error correction factor’,  describes short-timescale noise process that has no correlation between observing epochs, but correlated in frequency, data obtained simultaneously at different observing frequencies.</p><p>This parameter is only used by NANOGrav data and not applicable to EPTA and PPTA data.</p><h2 id="Parameters-applied-to-Tempo2-and-Tempo"><a href="#Parameters-applied-to-Tempo2-and-Tempo" class="headerlink" title="Parameters applied to Tempo2 and Tempo"></a>Parameters applied to Tempo2 and Tempo</h2><h3 id="EFAC-amp-EQUAD"><a href="#EFAC-amp-EQUAD" class="headerlink" title="EFAC &amp; EQUAD"></a>EFAC &amp; EQUAD</h3><blockquote><p><strong>Both tempo and tempo2</strong> accept <strong>T2EQUAD/T2EFAC</strong>. </p></blockquote><blockquote><p><strong>Neither</strong> accepts <strong>EQUAD/EFAC</strong> in the par file. </p></blockquote><p>Using EQUAD in tempo2 results in some confusing behavior since the “QUAD” string is also used for other purposes and the parsing is buggy. This specific bug could of course be easily fixed if we wanted to but older versions would still have the issue so might be good practice to avoid EQUAD/EFAC.</p><blockquote><p><strong>tempo2</strong> also accepts <strong>TNEF</strong> and <strong>TNEQ</strong>. These have different definition than T2EFAC/T2EQUAD. </p></blockquote><p>The order of application is different and I think TNEQ is given as log10 (seconds). tempo does not support these. I think we should avoid these for nanograv purposes. If PINT wants to support them someone should double-check the definitions vs tempo2.</p><h3 id="ECORR-1"><a href="#ECORR-1" class="headerlink" title="ECORR"></a>ECORR</h3><blockquote><p><strong>tempo</strong> accepts ECORR only. </p><p><strong>tempo2</strong> accepts either <strong>ECORR</strong> or <strong>TNECORR</strong>, they are treated identically. </p><p>T2ECORR is not a thing.</p></blockquote><h3 id="Red-Noise"><a href="#Red-Noise" class="headerlink" title="Red Noise"></a>Red Noise</h3><p><strong>tempo and tempo2 both</strong> accept <strong>RNAMP</strong> and <strong>RNIDX</strong>. </p><p><strong>tempo2</strong> also accepts <strong>TNRedAmp</strong> and <strong>TNRedGam</strong>, but the units/definitions are different than RNAMP/RNIDX. </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;EFAC-and-EQUAD&quot;&gt;&lt;a href=&quot;#EFAC-and-EQUAD&quot; class=&quot;headerlink&quot; title=&quot;EFAC and EQUAD</summary>
      
    
    
    
    <category term="Research" scheme="http://www.drjun.wang/categories/Research/"/>
    
    
    <category term="Pulsar" scheme="http://www.drjun.wang/tags/Pulsar/"/>
    
  </entry>
  
  <entry>
    <title>On the way to detecting the gravitational-wave background in the nanohertz range</title>
    <link href="http://www.drjun.wang/2021/10/27/20211027-epta-press/"/>
    <id>http://www.drjun.wang/2021/10/27/20211027-epta-press/</id>
    <published>2021-10-27T17:32:04.000Z</published>
    <updated>2021-10-27T17:32:04.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>How do galaxies form? The European Pulsar Timing Array marks an important step forward</strong> </p><p>The research collaboration EPTA (the “European Pulsar Timing Array”) reports on the result of a 24-year observation campaign with the five largest European radio telescopes. The campaign has led to a possible signal for the long-sought gravitational-wave background (GWB), which is expected to be orbiting supermassive black holes in the centers of galaxies at a short distance. The cooperation brings together teams of astronomers at the institutes of the major European radio telescopes, as well as research groups specializing in data analysis and modeling of gravitational wave signals. Among them are astrophysicists from the research group of Professor Dr. Joris Verbiest from the Faculty of Physics at Bielefeld University. Although a clear proof has not yet been achieved, it is an important step to detect gravitational waves at very low frequencies in the nanohertz range for the first time. The results are published online in the journal “Monthly Notices of the Royal Astronomical Society”.</p><p>This result was made possible by a data set collected over a long period of 24 years with the five major European radio telescopes. These include the 100 m radio telescope of the Max Planck Institute for Radio Astronomy near Effelsberg in Bonn, the 76 m Lovell telescope in Cheshire/Great Britain, the Nançay telescope for decimeter radio waves in France, the 64 m radio telescope at Pranu Sanguni (Sardinia/Italy) and the 16 antennas of the Westerbork Synthesis radio telescope in the Netherlands. In the observation mode of the Large European Array for Pulsars (LEAP), these five telescopes are connected to each other in such a way that they represent a virtual fully movable 200 m radio telescope, which significantly improves the sensitivity of the EPTA to gravitational waves.</p><p>The researchers observe the rays emitted by the magnetic poles of the rotating pulsars as pulses as they pass through the line of sight, similar to the light of a distant lighthouse. Pulsar Timing Arrays (PTAs) are networks of very stable rotating pulsars that are used as detectors for gravitational waves on a galactic scale. They are particularly sensitive to very low-frequency gravitational waves in the billionth of a hertz or nanohertz range. This expands the observation window for gravitational waves from the high frequencies of hundreds of hertz currently observed by ground-based observatories (LIGO, Virgo, KAGRA). While their detectors study short-term collisions of stellar black holes and neutron stars, the Pulsar Timing Arrays can be used to study gravitational waves as emitted by systems of rotating and slowly approaching supermassive black holes in the centers of galaxies. The addition of the gravitational waves released by a cosmic population of these binary systems forms the gravitational wave background.</p><p>“We can measure small changes in the arrival times of pulsar radio signals on Earth caused by the deformation of space-time due to a passing gravitational wave of very low frequency. In practice, these deformations in space-time show up as sources of very low-frequency noise in the series of observed arrival times of the pulses, a noise that is detected jointly by all pulsars of a pulsar timing array,” explains Dr. Jun Wang, who recently completed his doctorate on this topic at Bielefeld University.</p><p>However, the amplitude of this noise is incredibly tiny (estimated to be between ten and a few hundred billionths of a second), and in principle, many other effects could transmit a corresponding noise to every single pulsar in the pulsar timing array. To validate the results, several independent evaluation programs with different statistical frameworks were then used to exclude alternative noise sources and to search for the gravitational-wave background. Importantly, two independent procedures were used throughout the analysis to ensure mutual consistency.</p><p>The analysis with both methods in the context of the EPTA observations resulted in a clear can data signal for a gravitational wave background.</p><p>Einstein’s General Theory of Relativity predicts a very specific relationship between the space-time deformations experienced by the radio signals from pulsars located in different cardinal directions. The scientists refer to this as the spatial correlation of the signal or the so-called hellings-downs curve. Their detection can identify the observed noise as clearly caused by a gravitational-wave background. Dr. Siyuan Chen, researcher at the Laboratoire de Physique et de Chimie de l’Environnement et de l’Espace in Orleans, one of the two lead authors of the study, notes: “At the moment, the statistical uncertainties in our measurements do not yet allow us to identify the presence of the spatial correlation expected for the gravitational-wave background signal. For further confirmation, we need to include an even larger amount of pulsar data in the analysis, but the current results are already very encouraging.”</p><p>Prof. Dr. Joris Verbiest, group leader at Bielefeld University and one of the leading members of the European Pulsar Timing Array Consortium, summarizes: “It is really satisfying to finally see the first indications of a signal that underpin the expectation that we will soon open up a new part of the gravitational wave spectrum that will allow us to detail the formation history of galaxies over the course of cosmic time. study.”</p><p>Contact:<br>Prof. Dr. Joris Verbiest Bielefeld University Phone: 0521 106 3184 E-Mail: <a href="mailto:verbiest@physik.uni-bielefeld.de">verbiest@physik.uni-bielefeld.de</a> The authors of the original publication include S. Chen, R. N. Caballero, Y. J. Guo, A. Chalumeau, K. Liu, G. Shaifullah, K. J. Lee, S. Babak, G. Desvignes, A. Parthasarathy, H. Hu, E. van der Wateren, J. Antoniadis, A.-S.<br>Bak Nielsen, C. G. Bassa, A. Berthereau, M. Burgay, D. J. Champion, I. Cognard, M. Falxa, R. D. Ferdman, P.C.C. Freire, J. R. Gair, E. Graikou, L. Guil-lemot, J. Jang, G. H. Janssen, R. Karuppusamy, M. J.Keith, M. Kramer, X. J. Liu, A. G. Lyne, R. A. Main, J. W. McKee, M.B. Mickaliger, B.B. P. Perera, D. Perrodin, A. Petiteau, N. K. Porayko, A. Possenti, A. Samajdar, S. A. Sanidas, A. Sesana, L. Speri, B.W. Stappers, G. Theureau, C. Tiburzi, A. Vecchio, J. P. W. Verbiest, J. Wang, L. Wang and H. Xu.<br>Among them are the following authors from Bielefeld University: Ann-Sofie Bak Nielsen, Joris Verbiest, Jun Wang.</p><p>Original publication: S. Chen et al: Common-red-signal analysis with 24-yr high-precision timing of the European Pulsar Timing Array: Inferences in the stochastic gravitational-wave background search, 2021, Monthly Notices of the Royal Astronomical Society ( <a href="https://doi.org/10.1093/mnras/stab2833">https://doi.org/10.1093/mnras/stab2833</a> or <a href="https://academic.oup.com/mnras/article/508/4/4970/6410749">https://academic.oup.com/mnras/article/508/4/4970/6410749</a> )</p><p>More information: European Pulsar Timing Array (EPTA) <a href="http://www.epta.eu.org/">http://www.epta.eu.org/</a> International Pulsar Timing Array (IPTA) <a href="http://www.ipta4gw.org/">http://www.ipta4gw.org/</a></p><p>This is an traslation of the news report by the Bielefeld University. <a href="https://ekvv.uni-bielefeld.de/blog/pressemitteilungen/entry/auf_dem_weg_zum_nachweis">Orignal in German</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;&lt;strong&gt;How do galaxies form? The European Pulsar Timing Array marks an important step </summary>
      
    
    
    
    <category term="Press" scheme="http://www.drjun.wang/categories/Press/"/>
    
    
    <category term="Pulsar" scheme="http://www.drjun.wang/tags/Pulsar/"/>
    
    <category term="Blog" scheme="http://www.drjun.wang/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Azimuth and Elevation</title>
    <link href="http://www.drjun.wang/2021/08/10/20210810-azimuth-elevation/"/>
    <id>http://www.drjun.wang/2021/08/10/20210810-azimuth-elevation/</id>
    <published>2021-08-10T15:41:34.000Z</published>
    <updated>2021-08-10T15:41:34.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Azimuth and Elevation are two coordinates that define the position of a celestial body in the sky as viewed from a <strong>particular location</strong> at a <strong>particular time</strong>. Azimuth tells you which direction to face, while Elevation tells you how high up to look. Both are measured in degrees. </p><p>Azimuth ranges from 0° to 360°. It starts with <strong>North at 0°</strong>. As you turn to your right (in a clockwise direction), you’ll face East (90°), then South (180°), then West (270°), and finally return to North (360° and also 0°). So if the Azimuth for your celestial object is 45°, it means the object is northeast of you.</p><p>Elevation is also measured in degrees. A celestial object just barely rising above your horizon would be at 0° Elevation, while a celestial object directly overhead would be at 90° Elevation (also known as “the zenith”).</p><p>In the diagram below, the yellow circle represents the celestial object. It has an Azimuth of about 200° (southwest of the observer) and an Elevation of about 60° (about 2/3 of the way up in the sky).</p><div style="text-align: center;">    <img src="/figs/20210810-azimuth-elevation.assets/az_elevation.jpg" alt="azimuth and elevation" width="500"></div><p>As shown in the figure below, the observer’s current position is used as the origin.  An object due north has an azimuth of 0°, an object due east has an azimuth of 90°, an object due south has an azimuth of 180°, and an object due west has an azimuth of 270°.</p><div style="text-align: center;">    <img src="/figs/20210810-azimuth-elevation.assets/azimuth.png" alt="azimuth and elevation" width="500"></div><p>Similarly, as shown below, the elevation angle of a celestial body is the angle between the direction of the geometric center of the celestial body and the local horizon of the observer.</p><div style="text-align: center;">    <img src="/figs/20210810-azimuth-elevation.assets/elevation.png" alt="azimuth and elevation" width="500"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Azimuth and Elevation are two coordinates that define the position of a celestial body </summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Pulsar" scheme="http://www.drjun.wang/tags/Pulsar/"/>
    
    <category term="Astronomy" scheme="http://www.drjun.wang/tags/Astronomy/"/>
    
  </entry>
  
  <entry>
    <title>数学符号以及公式的英语读法</title>
    <link href="http://www.drjun.wang/2021/06/05/20210605-formula-english/"/>
    <id>http://www.drjun.wang/2021/06/05/20210605-formula-english/</id>
    <published>2021-06-05T16:20:18.000Z</published>
    <updated>2021-06-05T16:20:18.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="内容一"><a href="#内容一" class="headerlink" title="内容一"></a>内容一</h1><h2 id="基本数学符号"><a href="#基本数学符号" class="headerlink" title="基本数学符号"></a>基本数学符号</h2><h3 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除"></a>加减乘除</h3><img src="20190730111512457.png" width="50%" height="40%" title="20190730111512457.png" alt="20190730111512457.png"><p><strong>“+”<strong>当作运算符</strong>加号</strong>时读作plus，比如：</p><p>1+2 ➡️ one plus two</p><p>当”+”放在数字前表示<strong>正数</strong>时，读作positive，比如：</p><p>+4 ➡️ positive four</p><p>同样，<strong>“-”</strong>也有minus和negative两种读法，分别是<strong>减号</strong>和<strong>负数</strong>。</p><p><strong>“×”</strong> 两种读法都可以，国外的教授会常常读成times，可能因为比较简单吧，比如：</p><p>9x6 ➡️ nine times six</p><p><strong>“÷”</strong>只有一种读法divided by，就是被…分成几份</p><p>15÷3 ➡️ fifteen is divided by three</p><p><strong>注意</strong>：</p><p>其中plus和minus是不用第三人称单数形式的，因为plus和minus根本就不是动词，而是介词。</p><p>但是乘和除，的的确确是动词，出现第三人称单数的形式。您记住了吗？</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><img src="20190730111607189.png" width="50%" height="40%" title="20190730111607189.png" alt="20190730111607189.png"><p>比较运算符用来比较两个表达式的大小关系，比如：1+4&gt;3 ➡️ one plus four is greater thanthree</p><p>为什么用<strong>is</strong>？</p><p>这里one plus four 是介词plus 连接两个名词，但是one plus four 作为一个整体当作主语，因此不用are，而是is</p><p>4+5=9 ➡️ four plus five equalsnine 或 four plus five is equal tonine</p><p>其他的类推，只要你认识数学符号，应该不难用英语说出来。</p><h3 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h3><img src="20190730111632512-1622908253696.png" width="40%" height="50%" title="20190730111632512-1622908253696.png" alt="20190730111632512-1622908253696.png"><p>括号是最常见的数学符号了。</p><p>中文里同类词习惯有相同的部分，比如：卡车、消防车、救护车都有“车”字。<strong>小括号，中括号，大括号</strong>都是括号。（多么科学啊！）</p><p>而英语里卡车、消防车、救护车分别是truck, fire engine, ambulance一点都不像。</p><p>英语里<strong>小括号，中括号，大括号</strong>这三个词也是没有一点相似，分别是：parenthesis，bracket，brace.（太不科学了！）</p><p><strong>左括号</strong>叫做left或open，<strong>右括号</strong>叫做right或closed. 下次碰到了就大胆地说出来吧！</p><h3 id="级数表示"><a href="#级数表示" class="headerlink" title="级数表示"></a>级数表示</h3><img src="20190730111737292-1622908273227.png" width="50%" height="50%" title="20190730111737292-1622908273227.png" alt="20190730111737292-1622908273227.png"><p>哇～到中学数学了～这张表里的<strong>“a”</strong>是变量，而不是冠词“一个”的意思哦。</p><p>**|a|**是a的绝对值或绝对值a， 英文读作absolute value of a, 非常好理解。</p><p><strong>a’<strong>是什么？</strong>a****撇</strong>就是与a相关又不想重复的时候会用一下，英语里读成aprime, 同样有<strong>两撇</strong>adouble prime，<strong>三撇</strong>a triple prime…</p><p>但是注意了，如果**a’**表示时间分秒里的分，或者其他有具体意义的时候，就要按照具体意义读了。</p><p><strong>是a的n次方，</strong>是n 个a 相乘的结果，读作a super n或者ato the n</p><p>这两个初中代数就出现了，读作 abar和 astar. <strong>Bar</strong>就是 <strong>杆</strong>的意思。 a上面有个杆。中文怎么读？ a杠， a星。 </p><p>square是数学里的平方，cube是立方，root是根号，这几个词用于表示<strong>开方</strong></p><p>是最常出现的了，读作 asub n，一定要记住了！！在数学上大量出现。 <strong>根号a</strong>和 <strong>三次方a</strong>读作 square root of a和 cube root of a</p><h3 id="微分和偏微分"><a href="#微分和偏微分" class="headerlink" title="微分和偏微分"></a>微分和偏微分</h3><img src="f94815bf3a894cf095596e6c3a2e4d7c.png" width="50%" height="50%" title="f94815bf3a894cf095596e6c3a2e4d7c.png" alt="f94815bf3a894cf095596e6c3a2e4d7c.png"><p>升级到了高等数学，经过高考的学生才会碰到这两个。</p><p>这是什么鬼？这是一个变量对 x微分或偏微分的运算符，符号后面还要加上某一个变量。 首先，小伙伴知道中文怎么念吗？</p><p>嘿嘿，d比d x？英文读作dby d x，严谨地读作the derivative with respect to x， with respect to是<strong>关于</strong>的意思，就是关于x的微分。</p><p>偏 比偏x？英文读作the partial derivative with respect to x或者简单地读作partial over partialx，partial是部分的意思。</p><p>顺便显摆一下，<strong>微分是单变量时候叫法，如果是多变量就是偏微分喽</strong>！看咱这数学是不是杠杠滴！</p><h3 id="其他数学符号"><a href="#其他数学符号" class="headerlink" title="其他数学符号**"></a>其他数学符号**</h3><img src="cb952e4a8fc741e1877d195c6bd1a25e.jpeg" width="50%" height="50%" title="cb952e4a8fc741e1877d195c6bd1a25e.jpeg" alt="cb952e4a8fc741e1877d195c6bd1a25e.jpeg"><h2 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h2><p>有点数学基础了吧，来点实用的！进阶篇！</p><h3 id="代数-1"><a href="#代数-1" class="headerlink" title="代数(1)"></a>代数(1)</h3><img src="3150d930e37b4febb6f45ac3a4070d1b.jpeg" width="50%" height="50%" title="3150d930e37b4febb6f45ac3a4070d1b.jpeg" alt="3150d930e37b4febb6f45ac3a4070d1b.jpeg"><p>以上几个是<strong>代数表达式</strong>，是符号之间的运算。表达式不是等式，所以其英文翻译也不是一个句子，类似一个名词短语。</p><p>比如<strong>ab-c</strong>读作a bminus c，介词minus连接两个名词变量，结果还是一堆名词变量。<strong>ab</strong>直接读 a b就行。</p><p>因为语言的本质是传递信息，懂数学的人已经明白了，没有二义性。</p><p>如要更清晰地表达<strong>ab****，</strong>是 atimes b，times是谓语动词 time的第三人称单数。</p><p>**a-(b-c)<strong>和</strong>a(b+c)**里有一对括号，不用把括号读出来，读出来是赵本山，读信件时读逗号、括号、括号完了(liǎo)</p><p><strong>a-(b-c)<strong>数学上的意思是a减去b与c的差，英文也是这个逻辑，读作aminus the difference b minus c，没有of，其中the difference是</strong>差</strong>的意思。</p><p>**a(b+c)**读作atimes the sum b plus c，应该很好理解了。</p><p>**a-(-b-c)**读作aminus the quantity minus b minus c，使用quantity是英语语言习惯，避免plus和minus连在一起说。</p><h3 id="代数-2"><a href="#代数-2" class="headerlink" title="代数(2)"></a>代数(2)</h3><img src="4cbfbbed6a9c40cb84c1b7566da8ff55.jpeg" width="50%" height="50%" title="4cbfbbed6a9c40cb84c1b7566da8ff55.jpeg" alt="4cbfbbed6a9c40cb84c1b7566da8ff55.jpeg"><p>这几个单独拿来说事，是因为太重要了！</p><p>在国外课堂上，老师一边写公式一边嘴里叨咕着，公式里分数是很多，一般都念做over！因为快！比如<strong>8/9</strong>直接念eight over nine</p><p>复杂点的第二个</p><img src="3d956f5731e947f388228338a5c4ae1f.png" width="20%" height="20%" title="3d956f5731e947f388228338a5c4ae1f.png" alt="3d956f5731e947f388228338a5c4ae1f.png"><p>中文读<strong>c****分之a加b加d</strong>，中文读法有歧义，分不清加<strong>d</strong>是在分子上还是分数后面。</p><p>英文读作the quantity a plus b over c, that fraction plus d, 没有歧义！perfect！ </p><img src="6ab1d8570a6a4c8091d4b1a14839cbd1.png" width="20%" height="20%" title="6ab1d8570a6a4c8091d4b1a14839cbd1.png" alt="6ab1d8570a6a4c8091d4b1a14839cbd1.png"><p>是拿来绕嘴的，读作the fraction x squared over a squared plus the fraction y</p><p>squared over b squared equals 1，其中fraction是分数的意思。</p><p>这个是拿来是给你找信心的，很简单吧：a xsquared plus b x y plus c y squared plus d x plus e y plus fequals zero完全读对的童鞋奖励自己一根棒棒糖。</p><h3 id="几个特殊的"><a href="#几个特殊的" class="headerlink" title="几个特殊的"></a>几个特殊的</h3><img src="a94babc66a25445c9707f16a1d49db39.jpeg" width="50%" height="50%" title="a94babc66a25445c9707f16a1d49db39.jpeg" alt="a94babc66a25445c9707f16a1d49db39.jpeg">这几个特殊的每一个都很珍贵！拿走不谢。<p>第一个简单读成 a to the x，例子非常多，比如 读作 three to four，也可以读的更完整点， three raised to the four power是以b为底的a的对数，log to the base b of a，其中the base就是为底了，介词严谨地表达了准确的数学定义。</p><p>，是以10为底的3乘4的积的对数，读作log to the base 10 of the product 3 times 4</p><p>以此类推，</p><img src="8923b75e9e684a0ca8b722b445e85ab2.png" width="20%" height="20%" title="8923b75e9e684a0ca8b722b445e85ab2.png" alt="8923b75e9e684a0ca8b722b445e85ab2.png">中注意 the fraction和 the ratio是一样的，分数就是比的意思嘛。 <p>是 x的自然对数，读作 the natural log of x。 </p><p>自然对数底是多少？哼哼，百度啊，e=2.71828</p><p>注意：</p><p>中的“点点点”就读做 dot dot dot</p><p>**p(x)**数学上是表示一个以x为自变量的函数p，读作p of x。为什么不读成p x, 汉语就是这么读的.应该是避免和px搞混吧。</p><p>另外注意，</p><p>里也有个 <strong>of</strong></p><h3 id="带of-的函数"><a href="#带of-的函数" class="headerlink" title="带of 的函数"></a>带of 的函数</h3><img src="a2234148b6b64d75b6b3c0a322431742.jpeg" width="50%" height="50%" title="a2234148b6b64d75b6b3c0a322431742.jpeg" alt="a2234148b6b64d75b6b3c0a322431742.jpeg">单独总结一下**带of 的函数**，数学上是以x为自变量的函数p，其他的都不复杂。<h3 id="专业课里常出的数学符号"><a href="#专业课里常出的数学符号" class="headerlink" title="专业课里常出的数学符号"></a>专业课里常出的数学符号</h3><img src="e21267c25693471f87ecb45a54d80df1.jpeg" width="50%" height="50%" title="e21267c25693471f87ecb45a54d80df1.jpeg" alt="e21267c25693471f87ecb45a54d80df1.jpeg">这些在工程学科的专业课里很容易见到，理论力学里用<p>表示正应力，读作 sigma sub x，注意 sub 表示下标。 </p><p>当有大写字母时，读作 Capital q sub one。 </p><p>有括号，读作 Capital e of x，结合上面的 **p(x)**印象应该很深吧。 </p><p>这个比较怪，下标带括号，汉语一般读成 <strong>j 下标括号p</strong>，英文读作 j sub p in parentheses，parentheses是括号的意思。</p><h3 id="高等数学里面的几个符号"><a href="#高等数学里面的几个符号" class="headerlink" title="高等数学里面的几个符号"></a>高等数学里面的几个符号</h3><img src="72d9c60f413044c98dfed50da0538ef5.jpeg" width="50%" height="50%" title="72d9c60f413044c98dfed50da0538ef5.jpeg" alt="72d9c60f413044c98dfed50da0538ef5.jpeg">这几个表达式是求和、求积和求极限。<p>汉语读 <strong>西格玛1到大n</strong>，英文读作 summation from one to capital n</p><img src="0a11d8fc327e4f52aea8645eb18b3229.png" width="20%" height="20%" title="0a11d8fc327e4f52aea8645eb18b3229.png" alt="0a11d8fc327e4f52aea8645eb18b3229.png">英文里把希腊字母的意思说出来了，求和( summation), 这里多了 **正无穷**，读作 summation from i equals one to infinity of x sub i<p>是infinity就是正无穷。数学上是多个量求积的符号，英文 <strong>积</strong>是 product，是名词。 </p><img src="a7f13fb2a6224d788eeba70554798b83.png" width="20%" height="20%" title="a7f13fb2a6224d788eeba70554798b83.png" alt="a7f13fb2a6224d788eeba70554798b83.png">结构和求和一样， product from one to n<p>同理，</p><img src="26187dbb7eb34b608f576c32060b229b.png" width="20%" height="20%" title="26187dbb7eb34b608f576c32060b229b.png" alt="26187dbb7eb34b608f576c32060b229b.png">读成 product from i equals one to infinity of y sub i<p>的意思是 <strong>当x趋近a时y的极限等于b</strong>， limit as x approaches a of y equals b，limit是极限，名词，approaches 是趋紧的第三人称单数。</p><img src="254f53af6f864952b7621d6c6998e3ed.jpeg" width="50%" height="50%" title="254f53af6f864952b7621d6c6998e3ed.jpeg" alt="254f53af6f864952b7621d6c6998e3ed.jpeg"><p>的数学意思是 <strong>当x从左边趋紧a时关于x的函数f的极限</strong>，英文读作 limit as x approaches a minus of fof x，从左边就是从minus方向 </p><p>数学意思是 <strong>函数fx的不定积分</strong>，英文读作 integral of f of x d x，其中integral是积分的意思。 </p><h3 id="线性代数中的英文读法"><a href="#线性代数中的英文读法" class="headerlink" title="线性代数中的英文读法"></a>线性代数中的英文读法</h3><img src="3fa2a273e3404d1eb97378a7ffb3fe5c.jpeg" width="30%" height="30%" title="3fa2a273e3404d1eb97378a7ffb3fe5c.jpeg" alt="23fa2a273e3404d1eb97378a7ffb3fe5c.jpeg">线性代数是大学生必学的科目，里面全是**矩阵**和**向量**，英文分别是matrix和vector，不明觉厉！<p>表里第一个是个矩阵，有四个元素，第一行是2 和 7, 第二行是3和10，用英文读时也和中文表达类似。</p><p>Two by two matrix (意思是2x2 矩阵)，first row two seven, second row tree ten</p><p>注意此处没有is 等动词。 </p><p>第二个是<strong>行向量</strong>，读作row vector </p><p>第三个是<strong>列向量</strong>，读作column vector</p><h3 id="其他常用的表达式"><a href="#其他常用的表达式" class="headerlink" title="其他常用的表达式"></a>其他常用的表达式</h3><img src="ae9670f71d024eaabbedb046a2582ba7.jpeg" width="50%" height="50%" title="ae9670f71d024eaabbedb046a2582ba7.jpeg" alt="ae9670f71d024eaabbedb046a2582ba7.jpeg">读时汉语从不强调 **大写delta**，英文要读 capital delta y<p>其他的都在前面出现过，列在此处再此强调一下。</p><p><a href="https://www.sohu.com/a/214664854_200286">本文来源</a></p><h1 id="内容二"><a href="#内容二" class="headerlink" title="内容二"></a>内容二</h1><h2 id="基本运算（加减乘除、乘方、开方）"><a href="#基本运算（加减乘除、乘方、开方）" class="headerlink" title="基本运算（加减乘除、乘方、开方）"></a>基本运算（加减乘除、乘方、开方）</h2><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>相关符号： +</p><p>举例： 1 + 2 = 3 augend + addend = sum</p><p>相关词汇：addition 加法、plus sign 加号、plus symbol 加号、augend 被加数、addend 加数、sum 和</p><p>口语表达： One plus two equals three. 一加二等于三。One is the augend, two is the addend, and three is the sum. 1是被加数，2是加数，3是和。</p><pre><code>The sum of one and two is three. 1与2的和是3。If you add one and two, you get three. 1加上2，得到3。We are doing an addition (operation). 我们在做加法（运算）。</code></pre><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>相关符号： -</p><p>举例： 8 - 6 = 2 minuend -subtrahend = difference</p><p>相关词汇： subtraction 减法、minus sign 减号、minus symbol 减号、minuend 被减数、subtrahend 减数、difference 差</p><p>口语表达： Eight minus six equals two. 8减去6等于2。</p><pre><code>8 is the minuend, 6 is the subtrahend, and 2 is the difference. 8是被减数，6是减数，2是差。8, subtract/deduct 6 gives you 2. 8减去6，得到2。If you take 6 away from 8, you get/are left with 2. 8去掉6，得到/剩下2。We are doing a subtraction (operation). 我们在做减法（运算）。</code></pre><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p><strong>相关符号：</strong>×</p><p>举例： 3 × 4 = 12; multiplier × multiplicand = product ; factor × factor = product</p><p>相关词汇： multiplication 乘法、multiplier 被乘数、multiplicand 乘数、factor因数、product 积</p><p>口语表达： Three times four equals twelve. 3乘以4等于12。</p><pre><code>12 is the product of 3 and 4. 12是3与4的积。3 multiplied by 4 is 12. 3乘以4等于12。</code></pre><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><p>相关符号： ÷</p><p>举例： 8 ÷ 2 = 4 10 ÷ 4 = 2…2 dividend ÷ divisor = quotient, remainder</p><p>相关词汇： division 除法、obelus 除号、dividend 被除数、divisor 除数、quotient 商、remainder 余数</p><p>口语表达： Eight divided by two equals four. 8除以2等于4。</p><pre><code>10 divided by 4 gives you 2 with a remainder of 2. 10除以4等于2，余数为2。</code></pre><h3 id="幂运算"><a href="#幂运算" class="headerlink" title="幂运算"></a>幂运算</h3><p>举例： bn base exponent = power</p><p>相关词汇： exponentiation 幂运算、power operation 指数运算、exponent 指数、base 底、power 幂</p><p>口语表达： bn 可以读作 b to the n-th power, b to the power of n 或者 b raised to the n-th power</p><p>当指数为2或3时，即 b2 和 b3 通常读作 b squared 和 b cubed</p><pre><code>103 = 1000 可读作 10 cubed is 1,000. 10 to the third power is 1,000. 或 10 to the power of three is 1,000.</code></pre><h3 id="开方运算"><a href="#开方运算" class="headerlink" title="开方运算"></a>开方运算</h3><img src="20200718010629591.png" width="50%" height="50%" title="20200718010629591.png" alt="20200718010629591.png">相关词汇： root 根、degree 次、radicand 被开方数、square root 平方根、cube root 立方根<p>口语表达：</p><img src="20200718010713680.png" width="50%" height="50%" title="20200718010713680.png" alt="20200718010713680.png">The squared root of 9 is 3.<img src="2020071801084329.png" width="50%" height="50%" title="2020071801084329.png" alt="2020071801084329.png">The cube root of 8 is 2.<img src="20200718010908350.png" width="50%" height="50%" title="20200718010908350.png" alt="20200718010908350.png"><p>读作 the n-th root of x x 的 n 次方根</p><h2 id="基本计数方法（整数、小数、分数、科学计数法）"><a href="#基本计数方法（整数、小数、分数、科学计数法）" class="headerlink" title="基本计数方法（整数、小数、分数、科学计数法）"></a>基本计数方法（整数、小数、分数、科学计数法）</h2><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><p>举例： 123; 1234; 12345678</p><p>相关词汇： integer 整数、hundred 百、thousand 千、million 百万、billion 十亿、trillion 万亿</p><p>口语表达： 123 读作 one hundred and twenty-three，非正式可以省读为 one twenty-three</p><pre><code>1,234 读作 one thousand, two hundred and thirty-four 或者 twelve hundred and thirty-four，非正式可以省读为 twelve thirty-four12,345,678 读作 twelve million, three hundred and forty-five thousand, six hundred and seventy-eight（英语中数字以三位数为一组，每一组三位数前面加一个逗号）</code></pre><h3 id="小数"><a href="#小数" class="headerlink" title="小数"></a>小数</h3><p>举例： 0.5; 0.33; 10.875</p><p><strong>相关词汇：</strong>decimal或decimal number 小数、decimal point 小数点、decimal place 小数位、rounding 四舍五入、round up 上入、round down 下舍</p><p><strong>口语表达：</strong>0.5 读作 zero point five</p><pre><code>0.33 读作 zero point three three（注意小数点后面的数字要一个一个念出来，不能读成zero point thirty-three）10.875 读作 ten point eight seven five1.2735 rounded to 3 decimal places is 1.274. 1.2735四舍五入到三位小数是1.274。</code></pre><h3 id="分数"><a href="#分数" class="headerlink" title="分数"></a>分数</h3><p>举例： a/b;<br>相关词汇： fraction或fraction number 分数、numerator 分子、denominator 分母</p><p>口语表达：</p><p>&lt;img src=”2020071801122493.png” width=”50%” height=”50%” title=”2020071801122493.png” alt=2020071801122493.png”/&gt;</p><p>在口语里通常读作 a over b，要比读作 a divided by b简略</p><pre><code>½，one over two，一般说成one half，同样1/3一般说成one third，1/4 一般说成one quarter或one forth2/3， two over three, 一般说成two thirds（注意third后面加s变复数），类似地，5/12可以说成five twelfths1/100 一般说成one hundredth，其它以此类推</code></pre><h3 id="科学计数法"><a href="#科学计数法" class="headerlink" title="科学计数法"></a>科学计数法</h3><p>举例： 1.23×103 或 1.23E3; 7.21×10-22或7.21E-22</p><p>相关词汇： scientific notation 科学计数法</p><p><strong>口语表达：</strong>参见幂运算和指数运算的读法，1.23×103 可读做 one point two three times/multiplied by ten to the power of three, one point two three times ten to the third</p><pre><code>1.23E3 可读作 one point two three times E to the power of three / E to the third7.21×10-22 可读作 seven point two one times ten to the (power of) minus twenty-two 或 seven point two one times ten to the minus twenty-second</code></pre><h2 id="基本数学符号-1"><a href="#基本数学符号-1" class="headerlink" title="基本数学符号"></a>基本数学符号</h2><p>表1：基本数学符号（包括常用的标点符号）</p><img src="20200718012908657.png" width="50%" height="50%" title="20200718012908657.png" alt="20200718012908657.png">（四） 数学符号进阶表2：数学符号进阶<img src="20200718013500619.png" width="50%" height="50%" title="20200718013500619.png" alt="20200718013500619.png">（五） 常用数学标记表格3：常用数学标记<img src="20200718013650591.png" width="50%" height="50%" title="20200718013650591.png" alt="20200718013650591.png"><h2 id="数学运算进阶"><a href="#数学运算进阶" class="headerlink" title="数学运算进阶"></a>数学运算进阶</h2><h3 id="求阶乘"><a href="#求阶乘" class="headerlink" title="求阶乘"></a>求阶乘</h3><p>相关符号： !</p><p>相关词汇： factorial 阶乘</p><p>口语表达： 5! 读作five factorial 5的阶乘</p><pre><code>5! = 120 The value of five factorial is 120.</code></pre><h3 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h3><p>相关符号： ∑</p><p>相关词汇： summation 和、capital sigma notation 大写西格玛标记法</p><p>口语表达：</p><img src="20200718014014554.png" width="50%" height="50%" title="20200718014014554.png" alt="20200718014014554.png">    读作 the summation over k from 1 to 5 of k squared 或 the sum of k squared as k goes from 1 to 5，通常把summation省读为sum<h3 id="求积"><a href="#求积" class="headerlink" title="求积"></a>求积</h3><p>相关符号： Π \Pi Π</p><p>相关词汇： the product of a sequence 序列的积、capital pi notation 大写π标记法</p><p>口语表达：</p><img src="20200718014218200.png" width="50%" height="50%" title="20200718014218200.png" alt="20200718014218200.png">    读作 the product of i overi from 1 to 4 或者 the product of i as i goes from 1 to 4<h3 id="求极限"><a href="#求极限" class="headerlink" title="求极限"></a>求极限</h3><p>相关符号： lim</p><p>相关词汇： limit 极限</p><p>口语表达：</p><img src="20200718014342270.png" width="50%" height="50%" title="20200718014342270.png" alt="20200718014342270.png">    读作 the limit as x approaches zero of f of x<img src="20200718014425551.png" width="50%" height="50%" title="20200718014425551.png" alt="20200718014425551.png">    The limit of 1 over the absolute value of x as x approaches zero is infinity.<h3 id="对数运算"><a href="#对数运算" class="headerlink" title="对数运算"></a>对数运算</h3><p>相关符号： log， ln</p><p>相关词汇： logarithm operation 对数运算、base 底、common logarithm 常用对数（以10为底）、natural logarithm 自然对数（以自然数e=2.71818…为底）</p><p>口语表达：</p><img src="20200718015020530.png" width="50%" height="50%" title="20200718015020530.png" alt="20200718015020530.png">    读作 the logarithm of x to base b，通常口语里把logarithm简称log    <pre><code>lnx 读作 the natural log of x</code></pre><h3 id="求倒数"><a href="#求倒数" class="headerlink" title="求倒数"></a>求倒数</h3><p>相关词汇： reciprocal 倒数</p><p>口语表达： the reciprocal of 5 is one fifth (1/5) or zero point two (0.2).</p><h3 id="求反函数"><a href="#求反函数" class="headerlink" title="求反函数"></a>求反函数</h3><p>相关符号： f -1</p><p>相关词汇： inverse function 反函数</p><p>口语表达： y = f(x) = 2x + 4 Function y equals f of x equals 2 x plus 4.</p><pre><code>Its inverse function f inverse as a function of y is equal to one half y minus 2, f -1(y) = y/2 - 2.</code></pre><h3 id="向量点乘"><a href="#向量点乘" class="headerlink" title="向量点乘"></a>向量点乘</h3><p>相关符号： .</p><p>相关词汇： dot product 点积，数量积、scalar product 标量积</p><p>口语表达：</p><img src="20200718015605303.png" width="50%" height="50%" title="20200718015605303.png" alt="20200718015605303.png">    读作 the dot product of vectors u and v<h3 id="向量叉乘"><a href="#向量叉乘" class="headerlink" title="向量叉乘"></a>向量叉乘</h3><p>相关符号： ×</p><p>相关词汇： cros product 叉积、vector product 矢量积，向量积</p><p>口语表达：</p><img src="20200718015729261.png" width="50%" height="50%" title="20200718015729261.png" alt="20200718015729261.png">    读作 the cross product of vectors u and v<h3 id="求积分"><a href="#求积分" class="headerlink" title="求积分"></a>求积分</h3><p>相关符号：</p><img src="20200718015912916.png" width="50%" height="50%" title="20200718015912916.png" alt="20200718015912916.png">相关词汇： integration 积分运算、integral 积分、definite integral 定积分、<p>indefinite integral 不定积分、double integral 双重积分</p><p>口语表达：</p><img src="2020071801593810.png" width="50%" height="50%" title="2020071801593810.png" alt="2020071801593810.png">读作the integral of f of x d x<img src="20200718020000384.png" width="50%" height="50%" title="20200718020000384.png" alt="20200718020000384.png">    读作 the integral from t equals 0 to t equals infinity of f of t d t 或者 the integral of f of t d t as t goes from 0 to infinity<h3 id="求导数，求微分"><a href="#求导数，求微分" class="headerlink" title="求导数，求微分"></a>求导数，求微分</h3><p>相关符号：</p><img src="20200718020229706.png" width="50%" height="50%" title="20200718020229706.png" alt="20200718020229706.png">相关词汇： derivative 导数、first derivative 一阶导数、differential 微分<p>口语表达： dy/dx 全称为 the derivative with respect to x of y 或者 the derivative of y with respect to x，简读为d y over d x</p><img src="20200718020306212.png" width="50%" height="50%" title="20200718020306212.png" alt="20200718020306212.png">读作 the n-th derivative with respect to x of y<h3 id="求偏导数，求偏微分"><a href="#求偏导数，求偏微分" class="headerlink" title="求偏导数，求偏微分"></a>求偏导数，求偏微分</h3><p>相关符号：</p><img src="20200718020402746.png" width="50%" height="50%" title="20200718020402746.png" alt="20200718020402746.png">    读作 the partial derivative of f with respect to x<h3 id="求卷积"><a href="#求卷积" class="headerlink" title="求卷积"></a>求卷积</h3><p>相关符号： *</p><p>相关词汇： convolution 卷积</p><p>口语表达： f(t)*g(t) 读作 the convolution of functions f of t and g of t</p><p><a href="https://blog.csdn.net/zhuoqingjoking97298/article/details/107405536#t28">本文来源</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;内容一&quot;&gt;&lt;a href=&quot;#内容一&quot; class=&quot;headerlink&quot; title=&quot;内容一&quot;&gt;&lt;/a&gt;内容一&lt;/h1&gt;&lt;h2 id=&quot;基本数学符号&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Formula" scheme="http://www.drjun.wang/tags/Formula/"/>
    
    <category term="Math" scheme="http://www.drjun.wang/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Python虚拟环境</title>
    <link href="http://www.drjun.wang/2021/05/17/20210517-virtualenv/"/>
    <id>http://www.drjun.wang/2021/05/17/20210517-virtualenv/</id>
    <published>2021-05-17T07:38:57.000Z</published>
    <updated>2021-05-17T07:38:57.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Python虚拟环境"><a href="#Python虚拟环境" class="headerlink" title="Python虚拟环境"></a>Python虚拟环境</h1><p>Python 应用程序通常会使用不在标准库内的软件包和模块，且有时会需要包或者模块的特定版本，如应用程序 A 需要特定模块的 1.0 版本但应用程序 B 需要 2.0 版本。因此有效的环境管理在Python开发过程中至关重要，它不仅能避免不同项目之间的依赖冲突，还能保证代码可以在不同机器和系统上的一致运行。</p><p>Python的虚拟环境（Virtualenv）技术可以很好的实现python及其文件包的版本管理。virtualenv 的关键词是隔离（Isolation）, 其通过创建一个包含所有必要的可执行文件的文件夹，用来使用Python项目所需的包。Python社区提供了多种虚拟环境管理工具可供选择，其中virtualenv，venv和pipenv和conda是最为常见的三种。在本文中，我们将简单介绍这四种工具的使用，读者可以根据自己的需求和习惯自行选择一个合适的虚拟环境管理工具。</p><h2 id="1-virtualenv"><a href="#1-virtualenv" class="headerlink" title="1. virtualenv"></a>1. virtualenv</h2><p>virtualenv是Python的第三方库，它可以创建独立的Python环境。它的核心优势是同时支持Python 2.7+ 和 3.3+版本。</p><h3 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h3><pre class="line-numbers language-sh"><code class="language-sh"># 使用自己对应安装的pip版本pip3 install --user virtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-2-创建虚拟环境目录"><a href="#1-2-创建虚拟环境目录" class="headerlink" title="1.2 创建虚拟环境目录"></a>1.2 创建虚拟环境目录</h3><pre class="line-numbers language-sh"><code class="language-sh">mkdir myprojectcd myproject<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-3-创建Python运行环境-jwenv"><a href="#1-3-创建Python运行环境-jwenv" class="headerlink" title="1.3 创建Python运行环境: jwenv"></a>1.3 创建Python运行环境: jwenv</h3><pre class="line-numbers language-sh"><code class="language-sh">virtualenv --no-site-packages　jwenv  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注： 1） 此时当前目录下会生成一个名为：“myenv” 的目录，该目录中存放刚生成的虚拟环境文件。<br>　　 2） 参数：–no-site-packages （可省略） 其意义在于不复制已经安装到系统 Python 环境中的所有第三方包从而得到一个 “纯净” 的运行环境。<br>    3)  虚拟环境的名字（此例中是 jwenv）可以是任意的；若省略名字将会把文件均放在当前目录。</p><h3 id="1-4-选择使用一个Python解释器："><a href="#1-4-选择使用一个Python解释器：" class="headerlink" title="1.4 选择使用一个Python解释器："></a>1.4 选择使用一个Python解释器：</h3><pre class="line-numbers language-sh"><code class="language-sh">virtualenv -p /usr/bin/python2.7 myenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据需要选择将会使用的pyhon版本，此例使用 /usr/bin/python2.7 作为项目的Python解释器。</p><h3 id="1-5-激活虚拟运行环境"><a href="#1-5-激活虚拟运行环境" class="headerlink" title="1.5 激活虚拟运行环境"></a>1.5 激活虚拟运行环境</h3><pre class="line-numbers language-sh"><code class="language-sh">source jwenv/bin/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注： 执行完上述命令后，虚拟环境的名字(jwenv)会显示在命令提示符左侧，表明虚拟环境已激活，当前处于虚拟环境中。此时可以在该环境中安装常用的库文件或运行程序。</p><h3 id="1-6-安装第三方包，并运行Python命令"><a href="#1-6-安装第三方包，并运行Python命令" class="headerlink" title="1.6 安装第三方包，并运行Python命令"></a>1.6 安装第三方包，并运行Python命令</h3><pre class="line-numbers language-sh"><code class="language-sh"># 安装第三方包numpy和指定版本的astropypip install numpy astropy==4.0# 执行自己的程序python helloworld.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-7-退出当前的虚拟环境"><a href="#1-7-退出当前的虚拟环境" class="headerlink" title="1.7 退出当前的虚拟环境"></a>1.7 退出当前的虚拟环境</h3><pre class="line-numbers language-sh"><code class="language-sh">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将会回到系统默认的Python解释器，包括已安装的库也会回到默认的。</p><h3 id="1-8-删除虚拟环境"><a href="#1-8-删除虚拟环境" class="headerlink" title="1.8 删除虚拟环境"></a>1.8 删除虚拟环境</h3><p>没有使用virtualenvwrapper前，可以直接删除venv文件夹来删除环境</p><h2 id="2-venv"><a href="#2-venv" class="headerlink" title="2. venv"></a>2. venv</h2><p>venv是Python 3.3及以上版本内置的库，无需额外安装。它的很多操作都和 virtualenv 类似，但是两者运行机制不同。因为是从 3.3 版本开始自带的，这个工具也仅仅支持 python 3.3 和以后版本。所以，如果需要在 python2 上使用虚拟环境，依然要利用 virtualenv，但好在现在基本很少再使用python2版本。</p><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><p>一般无需额外安装，在Python 3.3及以上版本内置venv,如果某些Linux版本没有内置，可以使用如下命令安装：</p><p>｀｀｀<br>sudo apt install python3-venv  # 如有不同版本的Python3,可指定具体版本venv：python3.5-venv<br>｀｀｀</p><h3 id="2-2-创建虚拟环境目录"><a href="#2-2-创建虚拟环境目录" class="headerlink" title="2.2 创建虚拟环境目录"></a>2.2 创建虚拟环境目录</h3><pre class="line-numbers language-sh"><code class="language-sh">mkdir myprojectcd myproject<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-3-创建Python运行环境-jwenv"><a href="#2-3-创建Python运行环境-jwenv" class="headerlink" title="2.3 创建Python运行环境: jwenv"></a>2.3 创建Python运行环境: jwenv</h3><pre class="line-numbers language-sh"><code class="language-sh">python3 -m venv　jwenv  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注： 1） 此时当前目录下会生成一个名为：“myenv” 的目录，该目录中存放刚生成的虚拟环境文件。<br>    3)  虚拟环境的名字（此例中是 jwenv）可以是任意的；若省略名字将会把文件均放在当前目录。</p><h3 id="2-4-激活虚拟运行环境"><a href="#2-4-激活虚拟运行环境" class="headerlink" title="2.4 激活虚拟运行环境"></a>2.4 激活虚拟运行环境</h3><pre class="line-numbers language-sh"><code class="language-sh">source jwenv/bin/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注： 执行完上述命令后，虚拟环境的名字(jwenv)会显示在命令提示符左侧，表明虚拟环境已激活，当前处于虚拟环境中。此时可以在该环境中安装常用的库文件或运行程序。</p><h3 id="2-5-安装第三方包，并运行Python命令"><a href="#2-5-安装第三方包，并运行Python命令" class="headerlink" title="2.5 安装第三方包，并运行Python命令"></a>2.5 安装第三方包，并运行Python命令</h3><pre class="line-numbers language-sh"><code class="language-sh"># 安装第三方包numpy和指定版本的astropypip install numpy astropy==4.0# 执行自己的程序python helloworld.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-退出当前的虚拟环境"><a href="#2-6-退出当前的虚拟环境" class="headerlink" title="2.6 退出当前的虚拟环境"></a>2.6 退出当前的虚拟环境</h3><pre class="line-numbers language-sh"><code class="language-sh">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将会回到系统默认的Python解释器，包括已安装的库也会回到默认的。</p><h2 id="3-conda"><a href="#3-conda" class="headerlink" title="3. conda"></a>3. conda</h2><p>Anaconda是一个基于Python的平台，管理主要的数据科学包，包括panda、scikit-learn、SciPy、NumPy和谷歌的机器学习平台TensorFlow。它与conda(类似于pip的安装工具)、Anaconda导航器(用于GUI体验)和spyder(用于IDE)一起打包。</p><p>Conda是Anaconda包管理和环境工具，是Anaconda的核心。它可以直接创建不同python版本的虚拟环境。virtualenv只可以指定创建不同python版本的虚拟环境，前提是你的电脑上已经安装了不同版本的python,但conda就比较灵活。</p><h3 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h3><p>下载<a href="https://www.anaconda.com/products/individual">Anaconda</a>,选择对应的系统和版本类型下载后命令行执行安装即可。</p><h3 id="3-2-创建虚拟环境"><a href="#3-2-创建虚拟环境" class="headerlink" title="3.2 创建虚拟环境"></a>3.2 创建虚拟环境</h3><p>创建不同的python版本，直接写出版本号就好了，还可以同时安装想要的库。</p><pre class="line-numbers language-sh"><code class="language-sh"># Python 2.7  conda create -n jwenv python=2.7  # Python 3.5  conda create -n jwenv python=3.5.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-激活虚拟环境"><a href="#3-3-激活虚拟环境" class="headerlink" title="3.3 激活虚拟环境"></a>3.3 激活虚拟环境</h3><pre class="line-numbers language-sh"><code class="language-sh">source activate jwenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-4-退出虚拟环境"><a href="#3-4-退出虚拟环境" class="headerlink" title="3.4 退出虚拟环境"></a>3.4 退出虚拟环境</h3><pre class="line-numbers language-sh"><code class="language-sh">source deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-5-删除虚拟环境"><a href="#3-5-删除虚拟环境" class="headerlink" title="3.5 删除虚拟环境"></a>3.5 删除虚拟环境</h3><pre class="line-numbers language-sh"><code class="language-sh"># 删除一个已有环境conda remove --name jwenv --all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-6-更多命令"><a href="#3-6-更多命令" class="headerlink" title="3.6 更多命令"></a>3.6 更多命令</h3><pre class="line-numbers language-sh"><code class="language-sh"># 用户安装的不同Python环境会放在~/anaconda/envs目录下。# 列出系统存在虚拟环境conda info -econda env list# 查看当前环境下已安装的包conda list# 查看某个指定环境的已安装包conda list -n jwenv# 查找package信息conda search numpy# 安装packageconda install -n jwenv numpy# 如果不用-n指定环境名称，则被安装在当前激活环境# 也可以通过-c指定通过某个channel安装# 更新packageconda update -n jwenv numpy# 删除packageconda remove -n jwenv numpy# 更新anacondaconda update anaconda<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-pipenv"><a href="#4-pipenv" class="headerlink" title="4. pipenv"></a>4. pipenv</h2><p>pipenv是Python官方推荐的包管理工具。它综合了 virtualenv , pip 和 pyenv 三者的功能, 能够自动为项目创建和管理虚拟环境。 它主要包含了Pipfile、pip、click、requests和virtualenv，能够有效管理Python多个环境，各种第三方包及模块。它可以自动创建和管理virtualenv，并在安装或卸载包时从Pipfile中添加/删除包。它还会自生成Pipfile.lock文件，来锁定安装包的版本和依赖信息，避免构建错误。</p><h3 id="4-1-pipenv安装"><a href="#4-1-pipenv安装" class="headerlink" title="4.1 pipenv安装"></a>4.1 pipenv安装</h3><pre class="line-numbers language-sh"><code class="language-sh">pip install pipenv# 如需更新可使用pip install --user --upgrade pipenv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-2-创建虚拟环境"><a href="#4-2-创建虚拟环境" class="headerlink" title="4.2 创建虚拟环境"></a>4.2 创建虚拟环境</h3><pre class="line-numbers language-sh"><code class="language-sh">cd myproject# 指定使用 Python3.6 创建环境pipenv --python 3.6  # 或指定使用 Python2.7.14 创建环境pipenv --python 2.7.14  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-激活Pipenv-Shell"><a href="#4-3-激活Pipenv-Shell" class="headerlink" title="4.3 激活Pipenv Shell"></a>4.3 激活Pipenv Shell</h3><pre class="line-numbers language-sh"><code class="language-sh">pipenv shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-4-安装模块"><a href="#4-4-安装模块" class="headerlink" title="4.4 安装模块"></a>4.4 安装模块</h3><pre class="line-numbers language-sh"><code class="language-sh">pipenv install XXX  # 安装XXX模块并加入到Pipfilepipenv install XXX==1.11  # 安装固定版本的XXX模块并加入到Pipfile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="4-5-Python-文件的运行"><a href="#4-5-Python-文件的运行" class="headerlink" title="4.5 Python 文件的运行"></a>4.5 Python 文件的运行</h3><p>方式一： </p><pre class="line-numbers language-sh"><code class="language-sh">pipenv run python xxx.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>方式二：在激活环境中运行</p><pre class="line-numbers language-sh"><code class="language-sh"># 进入激活环境pipenv shell# 运行文件python xxx.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-6-虚拟环境的退出和删除"><a href="#4-6-虚拟环境的退出和删除" class="headerlink" title="4.6 虚拟环境的退出和删除"></a>4.6 虚拟环境的退出和删除</h3><pre class="line-numbers language-sh"><code class="language-sh"># 退出当前虚拟环境exit# 删除虚拟环境pipenv --rm  # 删除虚拟环境<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-7-Pipenv-常用命令"><a href="#4-7-Pipenv-常用命令" class="headerlink" title="4.7 Pipenv 常用命令"></a>4.7 Pipenv 常用命令</h3><pre class="line-numbers language-sh"><code class="language-sh"># 显示信息pipenv --where  # 显示目录信息pipenv --venv  # 显示虚拟环境信息pipenv --py  # 显示Python解释器信息# 检查pipenv graph  # 查看目前安装的库及其依赖pipenv check  # 检查安全漏洞# 更新pipenv update --outdated  # 查看所有需要更新的依赖项pipenv update  # 更新所有包的依赖项pipenv update <包名>  # 更新指定的包的依赖项# 删除包pipenv uninstall XXX  # 卸载XXX模块并从Pipfile中移除pipenv uninstall --all  # 卸载全部包并从Pipfile中移除pipenv uninstall --all-dev  # 卸载全部开发包并从Pipfile中移除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-8-requirements文件"><a href="#4-8-requirements文件" class="headerlink" title="4.8 requirements文件"></a>4.8 requirements文件</h3><p>pipenv可以像virtualenv一样用命令生成requirements.txt 文件：</p><pre class="line-numbers language-sh"><code class="language-sh"># 将Pipfile和Pipfile.lock文件里面的包导出为requirements.txt文件pipenv lock -r > requirements.txt# 将Pipfile和Pipfile.lock文件里面的开发包导出为requirements.txt文件pipenv lock -r --dev > requirements.txt  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pipenv 通过requirements.txt安装包：</p><pre class="line-numbers language-sh"><code class="language-sh">pipenv install -r requirements.txt# 只安装开发包pipenv install -r --dev requirements.txt  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Python虚拟环境&quot;&gt;&lt;a href=&quot;#Python虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;Python虚拟环境&quot;&gt;&lt;/a&gt;Python</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Software" scheme="http://www.drjun.wang/tags/Software/"/>
    
    <category term="Python" scheme="http://www.drjun.wang/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook</title>
    <link href="http://www.drjun.wang/2021/03/08/20210308-jupyter-notebook/"/>
    <id>http://www.drjun.wang/2021/03/08/20210308-jupyter-notebook/</id>
    <published>2021-03-08T15:39:59.000Z</published>
    <updated>2021-03-08T15:39:59.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-1-执行shell命令"><a href="#1-1-执行shell命令" class="headerlink" title="1.1 执行shell命令"></a>1.1 执行shell命令</h2><p>直接在命令之前放一个“!”，就能执行shell命令。甚至可以将值传递给shell，像下面这样：</p><pre class="line-numbers language-python"><code class="language-python">!pwd!echo <span class="token string">"Hello World"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>directory = !pwdprint(directory)</code></pre><h2 id="1-2-更换主题"><a href="#1-2-更换主题" class="headerlink" title="1.2 更换主题"></a>1.2 更换主题</h2><ol><li>安装</li></ol><pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> jupyterthemes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>加载可用主题列表：</li></ol><pre class="line-numbers language-bash"><code class="language-bash">jt -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>选择你想要的主题：</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># selecting a particular theme</span>jt -t <span class="token operator">&lt;</span>name of the theme<span class="token operator">></span><span class="token comment" spellcheck="true"># reverting to original Theme</span>jt -r<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-3-笔记本扩展"><a href="#1-3-笔记本扩展" class="headerlink" title="1.3 笔记本扩展"></a>1.3 笔记本扩展</h2><p>笔记本扩展（nbextensions）是一种JavaScript模块，可以加载到笔记本前端页面上，可以大大提升用户体验。</p><h3 id="1-3-1-Hinterland"><a href="#1-3-1-Hinterland" class="headerlink" title="1.3.1 Hinterland"></a>1.3.1 Hinterland</h3><p>Hinterland功能可以让你每敲完一个键，就出现下拉菜单，可以直接选中你需要的词汇。</p><h3 id="1-3-2-Snippets"><a href="#1-3-2-Snippets" class="headerlink" title="1.3.2 Snippets"></a>1.3.2 Snippets</h3><p>Snippets在工具栏里加了一个下拉菜单，可以非常方便的直接插入代码段，完全不用手动敲。</p><h3 id="1-3-3-目录"><a href="#1-3-3-目录" class="headerlink" title="1.3.3 目录"></a>1.3.3 目录</h3><p>这个功能可以自动找到所有的标题，生成目录。</p><p>并且这个目录还是移动的呦，你可以放在侧边栏，也可以拖动到任何你喜欢的地方悬浮起来。</p><h3 id="1-3-4-折叠一个标题下的全部内容"><a href="#1-3-4-折叠一个标题下的全部内容" class="headerlink" title="1.3.4 折叠一个标题下的全部内容"></a>1.3.4 折叠一个标题下的全部内容</h3><p>如果你的代码太长，觉得滚动过去太麻烦，可以直接折叠掉。</p><h3 id="1-3-5-Autopep8"><a href="#1-3-5-Autopep8" class="headerlink" title="1.3.5 Autopep8"></a>1.3.5 Autopep8</h3><p>一键美化代码，强迫症的福音。</p><h3 id="1-3-6-安装方法"><a href="#1-3-6-安装方法" class="headerlink" title="1.3.6 安装方法"></a>1.3.6 安装方法</h3><pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> jupyter_contrib_nbextensions <span class="token operator">&amp;&amp;</span> jupyter contrib nbextension <span class="token function">install</span><span class="token comment" spellcheck="true">#incase you get permission errors on MacOS,</span>pip <span class="token function">install</span> jupyter_contrib_nbextensions <span class="token operator">&amp;&amp;</span> jupyter contrib nbextension <span class="token function">install</span> --user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后把Jupyter打开，你就可以看到NBextensions这个选项卡了。</p><p>widgets.DatePicker( description=’Pick a Date’, disabled=False )</p><h2 id="1-4-Jupyter小工具"><a href="#1-4-Jupyter小工具" class="headerlink" title="1.4 Jupyter小工具"></a>1.4 Jupyter小工具</h2><p>还有一些Jupyter小工具，比如滑块、文本框之类的部分，可以做一些方便的交互。</p><h3 id="1-4-1-滑块"><a href="#1-4-1-滑块" class="headerlink" title="1.4.1 滑块"></a>1.4.1 滑块</h3><pre><code>def f(x): return x# Generate a slider interact(f, x=10,);</code></pre><h3 id="1-4-2-布尔值生成复选框"><a href="#1-4-2-布尔值生成复选框" class="headerlink" title="1.4.2 布尔值生成复选框"></a>1.4.2 布尔值生成复选框</h3><pre><code># Booleans generate check-boxesinteract(f, x=True);</code></pre><h3 id="1-4-3-字符串生成文本区域"><a href="#1-4-3-字符串生成文本区域" class="headerlink" title="1.4.3 字符串生成文本区域"></a>1.4.3 字符串生成文本区域</h3><pre><code># Strings generate text areasinteract(f, x='Hi there!');</code></pre><h3 id="1-4-4-播放器"><a href="#1-4-4-播放器" class="headerlink" title="1.4.4 播放器"></a>1.4.4 播放器</h3><pre><code>play = widgets.Play(  # interval=10,  value=50, min=0, max=100, step=1, description="Press play", disabled=False)slider = widgets.IntSlider()widgets.jslink((play, 'value'), (slider, 'value'))widgets.HBox([play, slider])</code></pre><h3 id="1-4-5-日历"><a href="#1-4-5-日历" class="headerlink" title="1.4.5 日历"></a>1.4.5 日历</h3><pre><code>widgets.DatePicker( description='Pick a Date', disabled=False)</code></pre><h3 id="1-4-6-调色盘"><a href="#1-4-6-调色盘" class="headerlink" title="1.4.6 调色盘"></a>1.4.6 调色盘</h3><pre><code>widgets.ColorPicker( concise=False, description='Pick a color', value='blue', disabled=False)</code></pre><h3 id="1-4-7-标签"><a href="#1-4-7-标签" class="headerlink" title="1.4.7 标签"></a>1.4.7 标签</h3><pre><code>tab_contents = ['P0', 'P1', 'P2', 'P3', 'P4']children = [widgets.Text(description=name) for name in tab_contents]tab = widgets.Tab()tab.children = childrenfor i in range(len(children)): tab.set_title(i, str(i))tab</code></pre><blockquote><p>安装方法</p></blockquote><pre><code># pippip install ipywidgetsjupyter nbextension enable --py widgetsnbextension# Condaconda install -c conda-forge ipywidgets#Installing ipywidgets with conda automatically enables the extension</code></pre><p>使用“interact”功能自动创建UI控件，这是使用IPython最方便的方法。</p><pre><code># Start with some imports!from ipywidgets import interactimport ipywidgets as widgets</code></pre><h2 id="1-5-放PPT"><a href="#1-5-放PPT" class="headerlink" title="1.5 放PPT"></a>1.5 放PPT</h2><p>人在江湖飘，难免遇到要做PPT的时候。</p><p>但是，如果你的内容都已经放在Jupyter里了，再重新导入PPT，太麻烦了，我们自动转换吧。</p><p>一种方法是用Jupyter内置的PPT选项，依次点击菜单栏里的View → Cell Toolbar → Slideshow，之后每个单元格上面都会有一个灰色的横条，选Sub-Slide。 然后输入以下代码：</p><pre><code>jupyter nbconvert *.ipynb --to slides --post serve# insert your notebook name instead of *.ipynb</code></pre><p>你也可以提前换好主题，比如onedork主题，然后再转换成PPT的的时候就是同一个主题风格的PPT了。</p><p>不过，用PyTorch默认方法生成的PPT代码不能编辑，这个时候就要用到RISE插件了。</p><p>RISE用到reveal.js来运行PPT，可以不退出PPT，直接运行代码。</p><p>先来安装RISE，</p><pre><code>pip install RISE</code></pre><p>然后调用JS和CSS：</p><pre><code>jupyter-nbextension install rise --py --sys-prefix#enable the nbextension:jupyter-nbextension enable rise --py --sys-prefix</code></pre><p>安装好啦，现在重新打开你的Jupyter Notebook，发现一个新的扩展，名叫“Enter/Exit RISE Slideshow”。戳一下，一个可以边演示边改的PPT就好了。</p><h2 id="1-6-嵌入链接和pdf"><a href="#1-6-嵌入链接和pdf" class="headerlink" title="1.6 嵌入链接和pdf"></a>1.6 嵌入链接和pdf</h2><p>扔链接再跳转实在是太麻烦了，不如直接把素材放进Jupyter里面。</p><h3 id="1-6-1-嵌入链接"><a href="#1-6-1-嵌入链接" class="headerlink" title="1.6.1 嵌入链接"></a>1.6.1 嵌入链接</h3><pre><code>#Note that http urls will not be displayed. Only https are allowed inside the Iframefrom IPython.display import IFrameIFrame('https://en.wikipedia.org/wiki/HTTPS', width=800, height=450)</code></pre><p>操作方式如下，当然你需要把链接换成你要放的链接：</p><pre><code>from IPython.display import IFrameIFrame('https://www.astrondog.com', width=800, heigh=450)</code></pre><h3 id="1-6-2-嵌入pdf"><a href="#1-6-2-嵌入pdf" class="headerlink" title="1.6.2 嵌入pdf"></a>1.6.2 嵌入pdf</h3><pre><code>from IPython.display import IFrameIFrame('https://arxiv.org/pdf/1406.2661.pdf', width=800, height=450)</code></pre><h2 id="1-7-图片"><a href="#1-7-图片" class="headerlink" title="1.7 图片"></a>1.7 图片</h2><h3 id="1-7-1-输出矢量图"><a href="#1-7-1-输出矢量图" class="headerlink" title="1.7.1 输出矢量图"></a>1.7.1 输出矢量图</h3><pre><code>import matplotlibimport matplotlib.pyplot as plt%matplotlib inline%config InlineBackend.figure_format = 'svg'</code></pre><h3 id="1-7-2-指定文件名后缀pdf或eps保存"><a href="#1-7-2-指定文件名后缀pdf或eps保存" class="headerlink" title="1.7.2 指定文件名后缀pdf或eps保存"></a>1.7.2 指定文件名后缀pdf或eps保存</h3><pre><code>plt.savefig('tmp.pdf', bbox_inches='tight')plt.show()</code></pre><h3 id="1-7-3-图片插入"><a href="#1-7-3-图片插入" class="headerlink" title="1.7.3 图片插入"></a>1.7.3 图片插入</h3><p><strong>方法1:(MarkDown模式下)(不能改变大小)(只能居中)</strong></p><p><img src="https://github.com/AstronDog/blog-pic/raw/master/logo1.png" alt="title"></p><p><strong>方法2:(MarkDown模式下)(不能改变大小)(可居中)</strong>(推荐)</p><p><img src="https://github.com/AstronDog/blog-pic/raw/master/logo1.png" alt="img"></p><p><strong>方法3:(Code模式下)(不能改变大小)(不可居中)</strong></p><pre><code>from IPython.display import ImageImage(filename = 'https://github.com/AstronDog/blog-pic/raw/master/logo.png', width=100, height=60)</code></pre><p><strong>方法4:(Code模式下)(不能改变大小)(不可居中)</strong></p><pre><code>%%html&lt;img src='./logo.png', width=100, height=60&gt;</code></pre><p><img src="https://github.com/AstronDog/blog-pic/raw/master/logo1.png" alt="img"></p><h2 id="1-8-魔法命令-Magic-Command"><a href="#1-8-魔法命令-Magic-Command" class="headerlink" title="1.8 魔法命令 Magic Command"></a>1.8 魔法命令 Magic Command</h2><p>magic函数主要包含两大类，一类是行魔法（Line magic）前缀为%，一类是单元魔法(Cell magic)前缀为%%； 行魔法只对命令所在的行有效，而单元魔法则必须出现在单元的第一行，对整个单元的代码进行处理。</p><p>%lsmagic #打印当前可以用的魔法命令，当我们想使用一个魔法命令，而不知怎么拼写函数名时，可以使用%lsmagic来查询；</p><h3 id="1-8-1-使用-lsmagic查看所有的魔法命令"><a href="#1-8-1-使用-lsmagic查看所有的魔法命令" class="headerlink" title="1.8.1 使用%lsmagic查看所有的魔法命令"></a>1.8.1 使用%lsmagic查看所有的魔法命令</h3><pre><code>%lsmagic</code></pre><pre><code>Available line magics:%alias  %alias_magic  %autocall  %automagic  %autosave  %bookmark  %cat  %cd  %clear  %colors  %config  %connect_info  %cp  %debug  %dhist  %dirs  %doctest_mode  %ed  %edit  %env  %gui  %hist  %history  %killbgscripts  %ldir  %less  %lf  %lk  %ll  %load  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %ls  %lsmagic  %lx  %macro  %magic  %man  %matplotlib  %mkdir  %more  %mv  %notebook  %page  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %popd  %pprint  %precision  %profile  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %qtconsole  %quickref  %recall  %rehashx  %reload_ext  %rep  %rerun  %reset  %reset_selective  %rm  %rmdir  %run  %save  %sc  %set_env  %store  %sx  %system  %tb  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmodeAvailable cell magics:%%!  %%HTML  %%SVG  %%bash  %%capture  %%debug  %%file  %%html  %%javascript  %%js  %%latex  %%perl  %%prun  %%pypy  %%python  %%python2  %%python3  %%ruby  %%script  %%sh  %%svg  %%sx  %%system  %%time  %%timeit  %%writefileAutomagic is ON, % prefix IS NOT needed for line magics.</code></pre><h3 id="1-8-2-使用-magic查看各个命令的说明"><a href="#1-8-2-使用-magic查看各个命令的说明" class="headerlink" title="1.8.2 使用%magic查看各个命令的说明"></a>1.8.2 使用%magic查看各个命令的说明</h3><pre><code>%magic</code></pre><h3 id="1-8-3-查看具体命令的说明，可以通过在命令后添加-如："><a href="#1-8-3-查看具体命令的说明，可以通过在命令后添加-如：" class="headerlink" title="1.8.3 查看具体命令的说明，可以通过在命令后添加?, 如："></a>1.8.3 查看具体命令的说明，可以通过在命令后添加?, 如：</h3><pre><code>%alias?</code></pre><h3 id="1-8-4-常用的命令总结"><a href="#1-8-4-常用的命令总结" class="headerlink" title="1.8.4 常用的命令总结"></a>1.8.4 常用的命令总结</h3><h4 id="1-8-4-1-matplotlib-inline-将matplotlib画出的图直接显示在Notebook之中-不以单独窗口显示"><a href="#1-8-4-1-matplotlib-inline-将matplotlib画出的图直接显示在Notebook之中-不以单独窗口显示" class="headerlink" title="1.8.4.1 %matplotlib inline :将matplotlib画出的图直接显示在Notebook之中,不以单独窗口显示"></a>1.8.4.1 %matplotlib inline :将matplotlib画出的图直接显示在Notebook之中,不以单独窗口显示</h4><pre><code>%matplotlib inlineimport numpy as npimport matplotlib.pyplot as pltplt.plot(np.arange(10))</code></pre><h4 id="1-8-4-2-timeit-timeit-为代码执行计时"><a href="#1-8-4-2-timeit-timeit-为代码执行计时" class="headerlink" title="1.8.4.2 %timeit %%timeit #为代码执行计时"></a>1.8.4.2 %timeit %%timeit #为代码执行计时</h4><pre><code>import numpy as np%timeit np.sin(24)The slowest run took 31.04 times longer than the fastest. This could mean that an intermediate result is being cached.1000000 loops, best of 3: 737 ns per loop</code></pre><pre><code>%%timeitx=np.sin(20)np.cos(-x)The slowest run took 42.58 times longer than the fastest. This could mean that an intermediate result is being cached.100000 loops, best of 3: 1.65 µs per loop</code></pre><h4 id="1-8-4-3-writefile-后面紧接着一个file-name-py-表示在jupyter-notebook里面创建一个py文件，后面cell里面的内容为py文件内容"><a href="#1-8-4-3-writefile-后面紧接着一个file-name-py-表示在jupyter-notebook里面创建一个py文件，后面cell里面的内容为py文件内容" class="headerlink" title="1.8.4.3 %%writefile #后面紧接着一个file_name.py,表示在jupyter notebook里面创建一个py文件，后面cell里面的内容为py文件内容"></a>1.8.4.3 %%writefile #后面紧接着一个file_name.py,表示在jupyter notebook里面创建一个py文件，后面cell里面的内容为py文件内容</h4><pre><code>%%writefile test_peace.pyimport numpy as npprint(np.random.randint(1,5))Writing test_peace.py</code></pre><p>在当前路径下会生成一个test_peace.py的文件，内容就是cell里面的内容</p><h4 id="1-8-4-4-run-后面紧接着一个相对地址的file-name-py，表示运行一个py文件"><a href="#1-8-4-4-run-后面紧接着一个相对地址的file-name-py，表示运行一个py文件" class="headerlink" title="1.8.4.4 %run #后面紧接着一个相对地址的file_name.py，表示运行一个py文件"></a>1.8.4.4 %run #后面紧接着一个相对地址的file_name.py，表示运行一个py文件</h4><pre><code>%run test_peace.py</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;1-1-执行shell命令&quot;&gt;&lt;a href=&quot;#1-1-执行shell命令&quot; class=&quot;headerlink&quot; title=&quot;1.1 执行shell命令&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Software" scheme="http://www.drjun.wang/tags/Software/"/>
    
    <category term="Python" scheme="http://www.drjun.wang/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Pulsar Data Analysis</title>
    <link href="http://www.drjun.wang/2021/03/07/20210307-pulsar-data-analysis/"/>
    <id>http://www.drjun.wang/2021/03/07/20210307-pulsar-data-analysis/</id>
    <published>2021-03-07T15:04:52.000Z</published>
    <updated>2021-03-07T15:04:52.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Data-format"><a href="#Data-format" class="headerlink" title="Data format"></a>Data format</h2><h3 id="Baseband"><a href="#Baseband" class="headerlink" title="Baseband"></a>Baseband</h3><h3 id="EPN"><a href="#EPN" class="headerlink" title="EPN"></a>EPN</h3><h3 id="PSRFITS"><a href="#PSRFITS" class="headerlink" title="PSRFITS"></a>PSRFITS</h3><p>The “PSRFITS” format supports mean pulse profile (‘fold-mode’) and streamed (‘search-mode’) multi-channel full-polarisation data. A PSRFITS format file consists of a primary header-data unit (HDU) followed by a series of binary extension HDUs, in which are stored specific information about an observation. </p><p>Usually, there are three types of pulsar data products are available:</p><h4 id="Fold-mode-observations"><a href="#Fold-mode-observations" class="headerlink" title="Fold-mode observations"></a>Fold-mode observations</h4><p>Fold-mode observations are recorded at the telescope for a particular known pulsar, where the data are stacked or ‘folded’ at the rotation period of the pulsar, to form a pulse profile averaged over the length of the observation.</p><p>Files of this type have the extension ‘.rf’. All fold-mode files are also processed by averaging over frequency channels, polarisation and time - files of this type have the extension ‘.FTp’.</p><h4 id="Search-mode-observations"><a href="#Search-mode-observations" class="headerlink" title="Search-mode observations"></a>Search-mode observations</h4><p>Search-mode observations are essentially comprised of a multi-channel full-polarisation data stream for the length of the observation.</p><p>Files of this type have the extension ‘.sf’.</p><h4 id="Calibration-files"><a href="#Calibration-files" class="headerlink" title="Calibration files"></a>Calibration files</h4><p>Before and after an observation, a signal from a linear noise diode is injected into the feed. This allows the associated pulsar observation to be polarimetrically calibrated.</p><p>Files of this type have the extension ‘.cf’. </p><h2 id="Psrchive"><a href="#Psrchive" class="headerlink" title="Psrchive"></a>Psrchive</h2><p>Checking that it’s working:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> psrchive <span class="token keyword">as</span> pr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Fundamental-data-classes"><a href="#Fundamental-data-classes" class="headerlink" title="Fundamental data classes:"></a>Fundamental data classes:</h3><blockquote><p><strong>Profile</strong> is a single pulse profile – data as a function of pulse phase only.</p></blockquote><blockquote><p><strong>Integration</strong> is a set of pulse profiles recorded simultaneously – usually<br>profiles as a function of frequency channel and/or polarization.</p></blockquote><blockquote><p><strong>Archive</strong> is a set of Integration as a function of time. Represents a<br>single data file.</p></blockquote><table>    <tbody><tr>        <td>            <center>                <img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/profile.png" width="400"> Fig 1, Profile            </center>        </td>        <td>            <center>                <img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/integration.png" width="400"> Fig 2, Integration            </center>        </td>        <td>            <center>                <img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/archive.png" width="400"> Fig 3, Archive            </center>        </td>    </tr></tbody></table><h3 id="Accessing-data-with-these-classes"><a href="#Accessing-data-with-these-classes" class="headerlink" title="Accessing data with these classes"></a>Accessing data with these classes</h3><h4 id="Archive"><a href="#Archive" class="headerlink" title="Archive:"></a>Archive:</h4><p>An Archive object represents a single data file, and contains a collection of Integration objects, also known as subintegrations. </p><pre><code>arch = pr.Archive_load('file.fits')arch.get_source()# '1744-1134'</code></pre><p>The <strong>get_data()</strong> method is an extra Python function that returns the raw data from the file as a NumPy array: </p><pre><code>data = arch.get_data()data.shape# (10, 4, 2048, 256)</code></pre><p>The dimensions of the data array are subintegration, polarization, channel, and profile bin. Important note: The get_data() function returns a copy of the Archive data. So changes made to the returned array will not be reflected in the Archive, and vice-versa.</p><p>Integrations within an Archive can be accessed in Python by indexing the Archive object use <strong>archive.get_Integration(isub)</strong> or <strong>archive[isub]</strong> methods. So the following two lines are equivalent: </p><pre><code>subint = arch.get_Integration(0)#等价subint = arch[0]</code></pre><h4 id="Integration"><a href="#Integration" class="headerlink" title="Integration:"></a>Integration:</h4><p>An Integration object represents a collection of pulse profiles recorded simultaneously, typically from a number of frequency channels and polarization states (Stokes parameters): </p><pre><code>subint.get_duration()# 60.230205439999999subint.get_nchan()# 2048</code></pre><p>The existing <strong>baseline_stats()</strong> and <strong>cal_levels()</strong> methods have been modified for Python to return tuples of arrays, for example: </p><pre><code>(b_mean, b_var) = subint.baseline_stats()b_mean.shape# (4, 2048)</code></pre><p>An Integration object contains a number of pulse profiles that can be accessed via  <strong>integration.get_Profile(ipol,ichan)</strong>: </p><pre><code>prof = subint.get_Profile(0,0)</code></pre><h4 id="Profile"><a href="#Profile" class="headerlink" title="Profile:"></a>Profile:</h4><p>A Profile object represents a single pulse profile. The <strong>profile.get_amps()</strong> method returns the profile data as a NumPy array: </p><pre><code>pdata = prof.get_amps()pdata.shape# (256,)</code></pre><p>In contrast to the <strong>arch.get_data()</strong> example above, the pdata array here points into the actual C++ data structure. So changes made to the array values will be reflected in the underlying Profile object.</p><p>The profile data values can also be read and/or altered by indexing the Profile object directly, for example: </p><pre><code>pdata[16]# 91.366058prof[16]#91.366058349609375prof[16] = 500.0pdata[16]# 500.0</code></pre><h4 id="Shortcut-to-get-all-data"><a href="#Shortcut-to-get-all-data" class="headerlink" title="Shortcut to get all data:"></a>Shortcut to get all data:</h4><p>Use <strong>archive.get_data()</strong> to return entire <strong>(Nsub, Npol, Nchan, Nbin)</strong> data cube as a NumPy array.</p><p>Examples:</p><pre><code>import psrchive as primport matplotlib.pyplot as pltarch = psrchive.Archive_load('file.fits') data = arch[0].get_Profile(0,200).get_amps()print(data.shape)# (1024,)plt.plot(data)</code></pre><div align="center"><img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/profile_example1.png" alt="" width="550"></div>```import psrchive as primport matplotlib.pyplot as plt<p>arch = psrchive.Archive_load(‘file.fits’)<br>data = arch.get_data()<br>print(data.shape)</p><h1 id="64-4-25-1024"><a href="#64-4-25-1024" class="headerlink" title="(64,4.25,1024)"></a>(64,4.25,1024)</h1><p>plt.plot(data[0,0,200:],’g’)</p><pre><code>&lt;div align="center"&gt;&lt;img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/profile_example2.png" alt="" width="550"&gt;&lt;/div&gt;####  Important: view and copyOne data access subtlety / gotcha:    **profile.get_amps()** returns a **view** of the original data    **archive.get_data()** returns a **copy** of the original dataThis means that if you want to modify the data in a file you need to change  the values in the results of profile.get_amps()Modified data files can be saved to disk using    **archive.unload(“new_filename”)**#### Plot profileArchive has a large number of methods (functions) for performing  common data processing steps.Common examples: dedisperse(), remove_baseline(), fscrunch(),  tscrunch(), pscrunch(), convert_state(), …archive.execute(“[psrsh code…]”) will run any psrsh command on  the archive.</code></pre><p>import psrchive as pr<br>import matplotlib.pyplot as plt</p><p>arch = psrchive.Archive_load(‘file.fits’)<br>arch.dedisperse()<br>arch.fscrunch()<br>arch.pscrunch()<br>arch.remove_baseline()<br>data = a[0].get_Profiel(0,0).get_amps()<br>plt.plot(data)</p><pre><code>&lt;div align="center"&gt;&lt;img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/preprocess.png" alt="" width="550"&gt;&lt;/div&gt;Looping over profiles, extracting data:</code></pre><p>import psrchive as pr</p><p>arch = psrchive.Archive_load(‘file.fits’) </p><p>for isub in range(a.get_nsubint())<br>    i = a[isub]<br>        for ichan in range(a.get_nchan()):<br>            print isub,ichan,i.get_Profiel(0,ichan).get_amps()[0]</p><pre><code>####  MJDThe MJD class is also now available in Python to deal with high-precision date/time values. Return values for date/time functions such as **Integration.get_epoch()** were previously converted to doubles for convenience.  To reproduce the old behavior and get a double-precision MJD value, use the **MJD.in_days()** method, for example:</code></pre><p>mjd_dbl = arch.get_Integration(0).get_start_time().in_days()</p><pre><code>####  Generating TOAs with Arrival TimeThe ArrivalTime class can be used to generate pulse times of arrival (TOAs) directly in Python, as an alternative to using the command-line utility pat.  Here is an example illustrating the basic usage:</code></pre><p>import psrchive</p><p>arrtim = psrchive.ArrivalTime()<br>arrtim.set_shift_estimator(‘PGS’)        # Set algorithm (see ‘pat -A’ help)<br>arrtim.set_format(‘Tempo2’)              # set TOA format<br>arrtim.set_format_flags(‘IPTA’)          # set some TOA flags<br>arrtim.set_attributes([‘chan’,’subint’]) # More TOA flags</p><h1 id="Load-template-profile"><a href="#Load-template-profile" class="headerlink" title="Load template profile"></a>Load template profile</h1><p>std = psrchive.Archive_load(‘J1713+0747.Rcvr1_2.GUPPI.9y.x.sum.sm’)<br>std.pscrunch()<br>arrtim.set_standard(std)</p><h1 id="Load-observation-profiles"><a href="#Load-observation-profiles" class="headerlink" title="Load observation profiles"></a>Load observation profiles</h1><p>obs = psrchive.Archive_load(‘guppi_55616_J1713+0747_0009.12y.x.ff’)<br>obs.pscrunch()<br>arrtim.set_observation(obs)</p><h1 id="Result-is-a-tuple-of-TOA-strings"><a href="#Result-is-a-tuple-of-TOA-strings" class="headerlink" title="Result is a tuple of TOA strings:"></a>Result is a tuple of TOA strings:</h1><p>toas = arrtim.get_toas()</p><pre><code>####  Simple ExampleIn this example, we recreate the helpful "pav -GTdp" plot using python, and demonstrate some common psrchive functionality:</code></pre><p>#! /usr/bin/env python<br>import pylab<br>import psrchive<br>arch = psrchive.Archive_load(‘1744_0001_0001.fits’)<br>arch.bscrunch_to_nbin(256)<br>arch.dedisperse()<br>arch.fscrunch_to_nchan(512)<br>arch.remove_baseline()<br>arch.convert_state(‘Stokes’)<br>data = arch.get_data()<br>freq_lo = arch.get_centre_frequency() - arch.get_bandwidth()/2.0<br>freq_hi = arch.get_centre_frequency() + arch.get_bandwidth()/2.0<br>pylab.imshow(data[:,0,:,:].mean(0),extent=(0,1,freq_lo,freq_hi))<br>pylab.xlabel(‘Pulse phase’)<br>pylab.ylabel(‘Frequency (MHz)’)<br>pylab.savefig(‘python_plot_example.png’)</p><pre><code>This results in the following plot: &lt;div align="center"&gt;&lt;img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/frequency.png" alt="" width="550"&gt;&lt;/div&gt;#### 3 TimingMost use cases only need  Archive, Integration,  and Profile classes.But some of the PSRCHIVE  algorithm classes are also  included in the Python  interface.For example,  ProfileShiftFit for doing  template-matching:No very comprehesive list of  these unfortunately.Browse  the C++ class docs, let me  know if you want something  added.</code></pre><p>import psrchive as pr<br>import matplotlib.pyplot as plt</p><p>a = psrchive.Archive_load(‘file.fits’).total()<br>s = psrchive.Archive_load(‘file.std’)<br>aprof = a[0].get_Profile(0,0)<br>sprof = s[0].get_Profile(0,0)</p><p>psf = pr.ProfileShiftFit()<br>psf.set_standard(sprof)<br>psr.set_Profile(aprof)<br>psr.get_shifts()</p><p>subplot(211); plot(aprof.get_a,ps())<br>subplot(212); plot(sprof.get_a,ps())</p><pre><code>&lt;div align="center"&gt;&lt;img src="https://github.com/AstronDog/blog-pic/raw/master/20200110psrpy/advance.png" alt="" width="550"&gt;&lt;/div&gt;### Archive Functions#### Public Member Functions##### Archivevoid **bscrunch** (unsigned nscrunch)     Integrate pulse profiles in phase. More...     void **pscrunch** ()     Integrate profiles in polarization. More...void **fscrunch** (unsigned nscrunch=0)     Integrate profiles in frequency. More...void **tscrunch** (unsigned nscrunch=0)     Integrate profiles in time. More...     void **remove_chan** (unsigned first, unsigned last)     Delete the specified inclusive channel range from the Archive.      #### Signal::Basis void**get_basis** () const     Convenience interface to Receiver::get_basis.void **dedisperse** ()     Rotate the Profiles to remove dispersion delays b/w chans. More...     void defaraday ()     Correct the Faraday rotation of Q into U. More...#### PhaseWeight void **baseline** () const     Return a new PhaseWeight instance with the baseline phase bins masked.void **remove_baseline** ()     Remove the baseline from all profiles.void **uniform_weight** (float new_weight=1.0)     Set the weight of each profile to the given number.      void **bscrunch_to_nbin** (unsigned new_nbin)     Call bscrunch with the appropriate value. More...void **fscrunch_to_nchan** (unsigned new_nchan)     Call fscrunch with the appropriate value. More...void **tscrunch_to_nsub** (unsigned new_nsub)     Call tscrunch with the appropriate value. More...MJD **start_time** () const     Return the MJD at the start of the first sub-integration.MJD **end_time** () const     Return the MJD at the end of the last sub-integration.double **integration_length** () const     Returns the total time integrated into all Integrations (in seconds) ### Common AttributesThese pure virtual methods provide access to the common attributes stored by all derived classes.virtual std::string **get_telescope** () const =0     Get the name of the telescope used.virtual void **set_telescope** (const std::string &amp;code)=0     Set the name of the telescope used.virtual Signal::State **get_state** () const =0     Get the state of the profile data.virtual void **set_state** (Signal::State state)=0     Set the state of the profile data.virtual Signal::Scale **get_scale** () const =0     Get the scale in which flux density is measured.virtual void **set_scale** (Signal::Scale scale)=0     Set the scale in which flux density is measured.virtual Signal::Source **get_type** () const =0     Get the observation type (psr, cal)virtual void **set_type** (Signal::Source type)=0     Set the observation type (psr, cal)virtual std::string **get_source** () const =0     Get the source name.virtual void **set_source** (const std::string &amp;source)=0     Set the source name.virtual sky_coord **get_coordinates** () const =0     Get the coordinates of the source.virtual void **set_coordinates** (const sky_coord &amp;coordinates)=0     Set the coordinates of the source.virtual double **get_centre_frequency** () const =0     Get the centre frequency of the observation.virtual void **set_centre_frequency** (double cf)=0     Set the centre frequency of the observation.virtual double **get_bandwidth** () const =0     Get the overall bandwidth of the observation.virtual void **set_bandwidth** (double bw)=0     Set the overall bandwidth of the observation.virtual double **get_dispersion_measure** () const =0     Get the dispersion measure (in ${\rm pc\, cm}^{-3}$)virtual void **set_dispersion_measure** (double dm)=0     Set the dispersion measure (in ${\rm pc\, cm}^{-3}$)virtual bool **get_dedispersed** () const =0     Inter-channel dispersion delay has been removed.virtual void **set_dedispersed** (bool done=true)=0     Set the value to be returned by get_dedispersed.virtual double **get_rotation_measure** () const =0     Get the rotation measure (in ${\rm rad\, m}^{-2}$)virtual void **set_rotation_measure** (double rm)=0     Set the rotation measure (in ${\rm rad\, m}^{-2}$)virtual bool **get_faraday_corrected** () const =0     Data has been corrected for ISM faraday rotation.virtual void **set_faraday_corrected** (bool done=true)=0     Set the value to be returned by get_ism_rm_corrected.virtual bool **get_poln_calibrated** () const =0     Data has been calibrated for polarimetric response of instrument.virtual void **set_poln_calibrated** (bool done=true)=0     Set the value to be returned by get_poln_calibrated.#### Dimension AttributesThese pure virtual methods are used by the Archive class to set the dimension attributes stored by the derived classes.virtual unsigned **get_nbin** () const =0     Get the number of pulsar phase bins used.virtual unsigned **get_nchan** () const =0     Get the number of frequency channels used.virtual unsigned **get_npol** () const =0     Get the number of polarizations.virtual void **set_nbin** (unsigned numbins)=0     Set the number of pulsar phase bins.virtual void **set_nchan** (unsigned numchan)=0     Set the number of frequency channels.virtual void **set_npol** (unsigned numpol)=0     Set the number of polarization measurements. virtual void **resize** (unsigned nsubint, unsigned npol=0, unsigned nchan=0, unsigned nbin=0)     Resize the Integration vector with new_Integration instances. More...virtual void **erase** (unsigned isubint)     Remove the specified sub-integration.## Astropy## Pypulse## pdat## Pint## References[ANTF](https://www.atnf.csiro.au/observers/data/ppdu_guide.html)</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;Data-format&quot;&gt;&lt;a href=&quot;#Data-format&quot; class=&quot;headerlink&quot; title=&quot;Data format&quot;&gt;&lt;/a&gt;Dat</summary>
      
    
    
    
    <category term="Research" scheme="http://www.drjun.wang/categories/Research/"/>
    
    
    <category term="Pulsar" scheme="http://www.drjun.wang/tags/Pulsar/"/>
    
    <category term="Software" scheme="http://www.drjun.wang/tags/Software/"/>
    
    <category term="Python" scheme="http://www.drjun.wang/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Gnuplot</title>
    <link href="http://www.drjun.wang/2021/03/06/20210306-gnuplot/"/>
    <id>http://www.drjun.wang/2021/03/06/20210306-gnuplot/</id>
    <published>2021-03-06T15:05:22.000Z</published>
    <updated>2021-03-06T15:05:22.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Gnuplot"><a href="#Gnuplot" class="headerlink" title="Gnuplot"></a>Gnuplot</h1><h1 id="BASH"><a href="#BASH" class="headerlink" title="BASH"></a>BASH</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Gnuplot&quot;&gt;&lt;a href=&quot;#Gnuplot&quot; class=&quot;headerlink&quot; title=&quot;Gnuplot&quot;&gt;&lt;/a&gt;Gnuplot&lt;/h1&gt;&lt;h1</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Software" scheme="http://www.drjun.wang/tags/Software/"/>
    
    <category term="Linux" scheme="http://www.drjun.wang/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>PDF Treatment</title>
    <link href="http://www.drjun.wang/2021/03/05/20210305-pdf-process/"/>
    <id>http://www.drjun.wang/2021/03/05/20210305-pdf-process/</id>
    <published>2021-03-05T15:05:56.000Z</published>
    <updated>2021-03-05T15:05:56.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Ubuntu下PDF文件处理"><a href="#Ubuntu下PDF文件处理" class="headerlink" title="Ubuntu下PDF文件处理"></a>Ubuntu下PDF文件处理</h1><h2 id="1-gs命令"><a href="#1-gs命令" class="headerlink" title="1. gs命令"></a>1. gs命令</h2><p>linux下可以直接用命令进行PDF的原生操作</p><p>使用命令：gs（GhostScript）</p><p>官网：<a href="https://www.ghostscript.com/">https://www.ghostscript.com/</a></p><p>安装该命令：<code>sudo apt-get install gs</code></p><h3 id="1-1-合并多个PDF为1个"><a href="#1-1-合并多个PDF为1个" class="headerlink" title="1.1 合并多个PDF为1个"></a>1.1 合并多个PDF为1个</h3><pre><code>gs -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=target.pdf -dBATCH 1.pdf 2.pdf ... n.pdf</code></pre><h3 id="1-2-单个PDF压缩"><a href="#1-2-单个PDF压缩" class="headerlink" title="1.2 单个PDF压缩"></a>1.2 单个PDF压缩</h3><pre><code>gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf-dPDFSETTINGS 参数描述：/prepress ：质量最好，文件最大/printer ：打印模式，推荐压缩/ebook ： 电子书模式，适合文本/screen ：文件最小，不推荐 </code></pre><h2 id="2-pdftk命令"><a href="#2-pdftk命令" class="headerlink" title="2. pdftk命令"></a>2. pdftk命令</h2><p>官网：<a href="http://www.pdflabs.com/docs/install-pdftk/">http://www.pdflabs.com/docs/install-pdftk/</a><br>安装该命令：<code>sudo snap install pdftk</code></p><h3 id="2-1-pdf文件合并"><a href="#2-1-pdf文件合并" class="headerlink" title="2.1 pdf文件合并"></a>2.1 pdf文件合并</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk in1.pdf in2.pdf <span class="token function">cat</span> output out.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-多个不同页面合并"><a href="#2-2-多个不同页面合并" class="headerlink" title="2.2 多个不同页面合并"></a>2.2 多个不同页面合并</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk A<span class="token operator">=</span>1.pdf B<span class="token operator">=</span>2.pdf C<span class="token operator">=</span>pdf <span class="token function">cat</span> A1-2 B2-3 C3 output abc.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3-旋转第一页"><a href="#2-3-旋转第一页" class="headerlink" title="2.3 旋转第一页"></a>2.3 旋转第一页</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk in.pdf <span class="token function">cat</span> 1E 2-end output out.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-4-加密（128位）"><a href="#2-4-加密（128位）" class="headerlink" title="2.4 加密（128位）"></a>2.4 加密（128位）</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf owner_pw pass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-5-加访问密码"><a href="#2-5-加访问密码" class="headerlink" title="2.5 加访问密码"></a>2.5 加访问密码</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf user_pw pass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-6-解密"><a href="#2-6-解密" class="headerlink" title="2.6 解密"></a>2.6 解密</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf input_pw pass output b.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-7-解压"><a href="#2-7-解压" class="headerlink" title="2.7 解压"></a>2.7 解压</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf uncompress<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-8-压缩"><a href="#2-8-压缩" class="headerlink" title="2.8 压缩"></a>2.8 压缩</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf compress<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-9-修复"><a href="#2-9-修复" class="headerlink" title="2.9 修复"></a>2.9 修复</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf output b.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-10-切割"><a href="#2-10-切割" class="headerlink" title="2.10 切割"></a>2.10 切割</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf <span class="token function">cat</span> 1-end output b.pdf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-11-分解成单页"><a href="#2-11-分解成单页" class="headerlink" title="2.11 分解成单页"></a>2.11 分解成单页</h3><pre class="line-numbers language-bash"><code class="language-bash">pdftk a.pdf burst<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-Imagemagick命令"><a href="#3-Imagemagick命令" class="headerlink" title="3. Imagemagick命令"></a>3. Imagemagick命令</h2><p>官网：<a href="http://www.imagemagick.org/">http://www.imagemagick.org</a></p><p>安装方法：<code>sudo apt-get install imagemagick</code></p><h3 id="3-1-PDF-TO-JPG"><a href="#3-1-PDF-TO-JPG" class="headerlink" title="3.1 PDF TO JPG"></a>3.1 PDF TO JPG</h3><p><code>convert -verbose -colorspace RGB -resize 1800 -interlace none -density 300 -quality 100 XXX.pdf XXX.jpg</code></p><p>参数：<br>-resize 1800：设置输出图片的宽度为1800像素，清晰度高了很多<br>-density 300：打印分辨率为300<br>-quality 100：JPG的质量为100%</p><h3 id="3-2-JPG-TO-PDF"><a href="#3-2-JPG-TO-PDF" class="headerlink" title="3.2 JPG TO PDF"></a>3.2 JPG TO PDF</h3><p>转换单个JPG：<code>convert x.jpg x.pdf</code><br>转换多个JPG为1个PDF：<code>convert *.jpg x.pdf</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Ubuntu下PDF文件处理&quot;&gt;&lt;a href=&quot;#Ubuntu下PDF文件处理&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu下PDF文件处理</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Software" scheme="http://www.drjun.wang/tags/Software/"/>
    
    <category term="PDF" scheme="http://www.drjun.wang/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>Linux Command</title>
    <link href="http://www.drjun.wang/2021/03/04/20210304-linux-command/"/>
    <id>http://www.drjun.wang/2021/03/04/20210304-linux-command/</id>
    <published>2021-03-04T15:06:23.000Z</published>
    <updated>2021-03-04T15:06:23.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>可以保持任务在远程连接断开之后，依然在保持执行。</p><h3 id="格式及状态"><a href="#格式及状态" class="headerlink" title="格式及状态"></a>格式及状态</h3><p>一般是格式是：id.windowName，id是系统自己分配的，windowName是创建时候自己命名的。</p><p>后面有状态detach（离线）或者attach（在线）或者dead（死进程）,离线在线代表的是是否有人再使用。</p><p>如果有时候在有个screen中，由于网络原因断开各种原因，会导致下次进来，screen状态是 attach，这个时候要回到该screen，就必须让其先离线,然后在进入。</p><p>如果是状态为dead，那么用screen -wipe id清理。</p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="创建会话："><a href="#创建会话：" class="headerlink" title="创建会话："></a>创建会话：</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">screen</span> -S session_name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="进入会话："><a href="#进入会话：" class="headerlink" title="进入会话："></a>进入会话：</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">screen</span> -r session_id or session_name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="回到主screen"><a href="#回到主screen" class="headerlink" title="回到主screen"></a>回到主screen</h4><p>（让某个screen后台运行）</p><pre class="line-numbers language-bash"><code class="language-bash">press <span class="token string">"ctrl + a"</span> and <span class="token keyword">then</span> press <span class="token string">"d"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看所有会话："><a href="#查看所有会话：" class="headerlink" title="查看所有会话："></a>查看所有会话：</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">screen</span> -ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="让某个screen离线"><a href="#让某个screen离线" class="headerlink" title="让某个screen离线"></a>让某个screen离线</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">screen</span> -d <span class="token function">id</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="关闭会话："><a href="#关闭会话：" class="headerlink" title="关闭会话："></a>关闭会话：</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">screen</span> -X -S screen_id quit<span class="token comment" spellcheck="true"># 或者进入screen后输入 </span><span class="token keyword">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="嵌套会话"><a href="#嵌套会话" class="headerlink" title="嵌套会话"></a>嵌套会话</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#就是 Screen 会话中的 Screen 会话</span>Ctrl a+c 快捷键来启动一个新的 Screen 会话Ctrl a+n 快捷键切换至下一个 Screen 会话Ctrl a+p 快捷键切换至上一个 Screen 会话<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pdftk"><a href="#pdftk" class="headerlink" title="pdftk"></a>pdftk</h2><p>“pdftk” 代表 “PDF 工具包”（PDF tool kit），可以实现包括合并、拆分、旋转、加密和解密、添加水印、压缩和解压缩等功能。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code>$ sudo apt-get install pdftk</code></pre><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h4><pre><code>#普通合并pdftk 1.pdf 2.pdf 3.pdf cat output 123.pdf#制定页面合并 (将one.pdf的前7页，two.pdf的前5页，one.pdf的第8页按先后顺序合并成combined.pdf)pdftk A=one.pdf B=two.pdf cat A1-7 B1-5 A8 output combined.pdf</code></pre><h4 id="拆分"><a href="#拆分" class="headerlink" title="拆分"></a>拆分</h4><pre><code>#拆分PDF的每一页为一个新文件 并按照指定格式设定文件名$ pdftk input.pdf burst output new_%d.pdf</code></pre><h4 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h4><pre><code>#提取1-15页为一个文件$ pdftk input.pdf cat 1-15 output new.pdf#提取第1至3，第5，第6至10页，并合并为一个pdf文件$ pdftk input.pdf cat 1-3 5 6-10 output combined.pdf</code></pre><h4 id="删除某页"><a href="#删除某页" class="headerlink" title="删除某页"></a>删除某页</h4><pre><code>#去除第 13 页,其余的保存为新PDF$ pdftk in.pdf cat 1-12 14-end output out1.pdf</code></pre><h4 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h4><pre><code>#去除第 13 页,其余的保存为新PDF$ pdftk in.pdf cat 1-12 14-end output out1.pdf</code></pre><h4 id="加密、解密"><a href="#加密、解密" class="headerlink" title="加密、解密"></a>加密、解密</h4><pre><code>#加密（128位）pdftk a.pdf output b.pdf owner_pw pass#加访问密码pdftk a.pdf output b.pdf user_pw pass#解密pdftk a.pdf input_pw pass output b.pdf</code></pre><h4 id="压缩、解压"><a href="#压缩、解压" class="headerlink" title="压缩、解压"></a>压缩、解压</h4><pre><code>#解压pdftk a.pdf output b.pdf uncompress#压缩pdftk a.pdf output b.pdf compress</code></pre><h4 id="分解成单页"><a href="#分解成单页" class="headerlink" title="分解成单页"></a>分解成单页</h4><pre><code>pdftk a.pdf burst</code></pre><h2 id="grep和egrep命令"><a href="#grep和egrep命令" class="headerlink" title="grep和egrep命令"></a>grep和egrep命令</h2><p>grep 代表“全局正则表达式打印”，用于将<strong>正则表达式</strong>与<strong>文件</strong>或<strong>输入流中</strong>的文本进行匹配。 它搜索您在命令行上指定的文本的 PATTERN，并为您输出结果。用于过滤/搜索的特定字符。可使用<strong>正则表达式</strong>配合多种命令使用。</p><h3 id="命令格式如下："><a href="#命令格式如下：" class="headerlink" title="命令格式如下："></a>命令格式如下：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># grep [OPTIONS] PATTERN [FILE...]</span><span class="token comment" spellcheck="true">#在文件中搜索一个单词，命令会返回一个包含 “match_pattern” 的文本行：</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="主要选项-options"><a href="#主要选项-options" class="headerlink" title="主要选项[options]:"></a>主要选项[options]:</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">grep</span> --help可查看-E: 使用扩展正则表达式-c：只输出匹配行的计数。-i：不区分大小写。-h：查询多文件时不显示文件名。-l：查询多文件时只输出包含匹配字符的文件名。-n：显示匹配行及行号。-r：在多级目录中对文本进行递归搜索-s：不显示不存在或无匹配文本的错误信息。-v：显示不包含匹配文本的所有行。--color<span class="token operator">=</span>auto ：可以将找到的关键词部分加上颜色的显示。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="pattern正则表达式主要参数"><a href="#pattern正则表达式主要参数" class="headerlink" title="pattern正则表达式主要参数:"></a>pattern正则表达式主要参数:</h3><pre class="line-numbers language-bash"><code class="language-bash">    ^    <span class="token comment" spellcheck="true"># 锚定行的开始 如：'^grep'匹配所有以grep开头的行。    </span>    $    <span class="token comment" spellcheck="true"># 锚定行的结束 如：'grep$' 匹配所有以grep结尾的行。</span>    <span class="token keyword">.</span>    <span class="token comment" spellcheck="true"># 匹配一个非换行符的字符 如：'gr.p'匹配gr后接一个任意字符，然后是p。    </span>    *    <span class="token comment" spellcheck="true"># 匹配零个或多个先前字符 如：'*grep'匹配所有一个或多个空格后紧跟grep的行。    </span>    .*   <span class="token comment" spellcheck="true"># 一起用代表任意字符。   </span>    +    <span class="token comment" spellcheck="true">#匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \+。</span>    ?    <span class="token comment" spellcheck="true">#匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \?。</span>    <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true"># 匹配一个指定范围内的字符，如'[Gg]rep'匹配Grep和grep。    </span>    <span class="token punctuation">[</span>^<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 匹配一个不在指定范围内的字符，如：'[^A-FH-Z]rep'匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。    </span>    \<span class="token punctuation">(</span><span class="token punctuation">..</span>\<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 标记匹配字符，如'\(love\)'，love被标记为1。    </span>    \<span class="token operator">&lt;</span>      <span class="token comment" spellcheck="true"># 锚定单词的开始，如:'\&lt;grep'匹配包含以grep开头的单词的行。    </span>    \<span class="token operator">></span>      <span class="token comment" spellcheck="true"># 锚定单词的结束，如'grep\>'匹配包含以grep结尾的单词的行。    </span>    x\<span class="token punctuation">{</span>m\<span class="token punctuation">}</span>  <span class="token comment" spellcheck="true"># 重复字符x，m次，如：'0\{5\}'匹配包含5个o的行。    </span>    x\<span class="token punctuation">{</span>m,\<span class="token punctuation">}</span>   <span class="token comment" spellcheck="true"># 重复字符x,至少m次，如：'o\{5,\}'匹配至少有5个o的行。    </span>    x\<span class="token punctuation">{</span>m,n\<span class="token punctuation">}</span>  <span class="token comment" spellcheck="true"># 重复字符x，至少m次，不多于n次，如：'o\{5,10\}'匹配5--10个o的行。   </span>    \w    <span class="token comment" spellcheck="true"># 匹配文字和数字字符，也就是[A-Za-z0-9]，如：'G\w*p'匹配以G后跟零个或多个文字或数字字符，然后是p。   </span>    \W    <span class="token comment" spellcheck="true"># \w的反置形式，匹配一个或多个非单词字符，如点号句号等。   </span>    \b    <span class="token comment" spellcheck="true"># 单词锁定符，如: '\bgrep\b'只匹配grep。  </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h2><p>sed 是 stream editor 的缩写，中文称之为“流编辑器”。</p><p>sed 命令是一个面向行处理的工具，它以“行”为处理单位，针对每一行进行处理，处理后的结果会输出到标准输出（STDOUT）。</p><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sed</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token string">'command'</span> file<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token function">sed</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> -f scriptfile file<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><pre class="line-numbers language-bash"><code class="language-bash">-e<span class="token operator">&lt;</span>script<span class="token operator">></span>或--expression<span class="token operator">=</span><span class="token operator">&lt;</span>script<span class="token operator">></span>：以选项中的指定的script来处理输入的文本文件；-f<span class="token operator">&lt;</span>script文件<span class="token operator">></span>或--file<span class="token operator">=</span><span class="token operator">&lt;</span>script文件<span class="token operator">></span>：以选项中指定的script文件来处理输入的文本文件；-h或--help：显示帮助；-n或--quiet或——silent：仅显示script处理后的结果；-V或--version：显示版本信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><pre class="line-numbers language-bash"><code class="language-bash">a\ 在当前行下面插入文本。i\ 在当前行上面插入文本。c\ 把选定的行改为新的文本。d 删除，删除选择的行。D 删除模板块的第一行。s 替换指定字符h 拷贝模板块的内容到内存中的缓冲区。H 追加模板块的内容到内存中的缓冲区。g 获得内存缓冲区的内容，并替代当前模板块中的文本。G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。l 列表不能打印字符的清单。n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。p 打印模板块的行。P<span class="token punctuation">(</span>大写<span class="token punctuation">)</span> 打印模板块的第一行。q 退出Sed。b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。r <span class="token function">file</span> 从file中读行。t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。w <span class="token function">file</span> 写并追加模板块到file末尾。  W <span class="token function">file</span> 写并追加模板块的第一行到file末尾。  <span class="token operator">!</span> 表示后面的命令对所有没有被选定的行发生作用。  <span class="token operator">=</span> 打印当前行号码。  <span class="token comment" spellcheck="true"># 把注释扩展到下一个换行符以前。 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sed替换标记"><a href="#sed替换标记" class="headerlink" title="sed替换标记"></a>sed替换标记</h3><pre class="line-numbers language-bash"><code class="language-bash">g 表示行内全面替换。  p 表示打印行。  w 表示把行写入一个文件。  x 表示互换模板块中的文本和缓冲区中的文本。  y 表示把一个字符翻译为另外的字符（但是不用于正则表达式）\1 子串匹配标记<span class="token operator">&amp;</span> 已匹配字符串标记<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><pre><code>1. sed -i '/preSql/d' a.txt－－－删除匹配到preSql的行2. sed -i '1d' a.txt－－－删除第一行3. sed -i '3~2d' a.txt－－－从第三行开始,每隔一行删除4. sed -i '4,8d' a.txt－－－删除从第４行到第８行5. sed -i '$d'  a.txt－－－删除最后一行6. sed '/^$/d' a.txt－－－删除所有空行7. sed -i  '/Website Design/,$d' a.txt－－－从匹配行到末尾行8. sed -i  '/Storage/,+2d' a.txt－－－删除匹配行和之后两行</code></pre><h2 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h2><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p><h3 id="命令格式和选项"><a href="#命令格式和选项" class="headerlink" title="命令格式和选项"></a>命令格式和选项</h3><h4 id="语法形式"><a href="#语法形式" class="headerlink" title="语法形式"></a>语法形式</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">awk</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token string">'script'</span> var<span class="token operator">=</span>value file<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token function">awk</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> -f scriptfile var<span class="token operator">=</span>value file<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="常用命令选项"><a href="#常用命令选项" class="headerlink" title="常用命令选项"></a>常用命令选项</h4><pre class="line-numbers language-bash"><code class="language-bash">-F fs   fs指定输入分隔符，fs可以是字符串或正则表达式，如-F:-v var<span class="token operator">=</span>value   赋值一个用户定义变量，将外部变量传递给awk-f scripfile  从脚本文件中读取awk命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>log.txt文本内容如下：</p><pre><code>2 this is a test3 Are you like awkThis's a test10 There are orange,apple,mongo</code></pre><p>用法一：</p><pre><code>awk '{[pattern] action}' {filenames}   # 行匹配语句 awk '' 只能用单引号</code></pre><p>实例：</p><pre><code># 每行按空格或TAB分割，输出文本中的1、4项 $ awk '{print $1,$4}' log.txt --------------------------------------------- 2 a 3 like This's 10 orange,apple,mongo # 格式化输出 $ awk '{printf "%-8s %-10s\n",$1,$4}' log.txt --------------------------------------------- 2        a 3        like This's 10       orange,apple,mongo </code></pre><p>用法二：</p><pre><code>awk -F  #-F相当于内置变量FS, 指定分割字符</code></pre><p>实例：</p><pre><code># 使用","分割 $  awk -F, '{print $1,$2}'   log.txt --------------------------------------------- 2 this is a test 3 Are you like awk This's a test 10 There are orange apple # 或者使用内建变量 $ awk 'BEGIN{FS=","} {print $1,$2}'     log.txt --------------------------------------------- 2 this is a test 3 Are you like awk This's a test 10 There are orange apple # 使用多个分隔符.先使用空格分割，然后对分割结果再使用","分割 $ awk -F '[ ,]'  '{print $1,$2,$5}'   log.txt --------------------------------------------- 2 this test 3 Are awk This's a 10 There apple</code></pre><p>用法三：</p><pre><code>awk -v  # 设置变量</code></pre><p>实例：</p><pre><code> $ awk -va=1 '{print $1,$1+a}' log.txt --------------------------------------------- 2 3 3 4 This's 1 10 11 $ awk -va=1 -vb=s '{print $1,$1+a,$1b}' log.txt --------------------------------------------- 2 3 2s 3 4 3s This's 1 This'ss 10 11 10s</code></pre><p>用法四：</p><pre><code>awk -f {awk脚本} {文件名}</code></pre><p>实例：</p><pre><code> $ awk -f cal.awk log.txt</code></pre><hr><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">=, +=, -=, *=, /=, %=, ^=, **=</td><td align="center">赋值</td></tr><tr><td align="center">?:</td><td align="center">C条件表达式</td></tr><tr><td align="center">||</td><td align="center">逻辑或</td></tr><tr><td align="center">&amp;&amp;</td><td align="center">逻辑与</td></tr><tr><td align="center">~ 和 !~</td><td align="center">匹配正则表达式和不匹配正则表达式</td></tr><tr><td align="center">&lt;, &lt;=, &gt;, &gt;=, !=, ==</td><td align="center">关系运算符</td></tr><tr><td align="center">空格</td><td align="center">连接</td></tr><tr><td align="center">+, -</td><td align="center">加，减</td></tr><tr><td align="center">*, /, %</td><td align="center">乘，除与求余</td></tr><tr><td align="center">+, -, !</td><td align="center">一元加，减和逻辑非</td></tr><tr><td align="center">^ <em>,</em>*</td><td align="center">求幂</td></tr><tr><td align="center">++, –</td><td align="center">增加或减少，作为前缀或后缀</td></tr><tr><td align="center">$</td><td align="center">字段引用</td></tr><tr><td align="center">in</td><td align="center">数组成员</td></tr></tbody></table><p>过滤第一列大于2的行</p><pre><code>$ awk '$1&gt;2' log.txt    #命令#输出3 Are you like awkThis's a test10 There are orange,apple,mongo</code></pre><p>过滤第一列等于2的行</p><pre><code>$ awk '$1==2 {print $1,$3}' log.txt    #命令#输出2 is</code></pre><p>过滤第一列大于2并且第二列等于’Are’的行</p><pre><code>$ awk '$1&gt;2 &amp;&amp; $2=="Are" {print $1,$2,$3}' log.txt    #命令#输出3 Are you</code></pre><hr><h3 id="内建变量"><a href="#内建变量" class="headerlink" title="内建变量"></a>内建变量</h3><table><thead><tr><th align="center">变量</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">$n</td><td align="center">当前记录的第n个字段，字段间由FS分隔</td></tr><tr><td align="center">$0</td><td align="center">完整的输入记录</td></tr><tr><td align="center">ARGC</td><td align="center">命令行参数的数目</td></tr><tr><td align="center">ARGIND</td><td align="center">命令行中当前文件的位置(从0开始算)</td></tr><tr><td align="center">ARGV</td><td align="center">包含命令行参数的数组</td></tr><tr><td align="center">CONVFMT</td><td align="center">数字转换格式(默认值为%.6g)ENVIRON环境变量关联数组</td></tr><tr><td align="center">ERRNO</td><td align="center">最后一个系统错误的描述</td></tr><tr><td align="center">FIELDWIDTHS</td><td align="center">字段宽度列表(用空格键分隔)</td></tr><tr><td align="center">FILENAME</td><td align="center">当前文件名</td></tr><tr><td align="center">FNR</td><td align="center">各文件分别计数的行号</td></tr><tr><td align="center">FS</td><td align="center">字段分隔符(默认是任何空格)</td></tr><tr><td align="center">IGNORECASE</td><td align="center">如果为真，则进行忽略大小写的匹配</td></tr><tr><td align="center">NF</td><td align="center">一条记录的字段的数目</td></tr><tr><td align="center">NR</td><td align="center">已经读出的记录数，就是行号，从1开始</td></tr><tr><td align="center">OFMT</td><td align="center">数字的输出格式(默认值是%.6g)</td></tr><tr><td align="center">OFS</td><td align="center">输出记录分隔符（输出换行符），输出时用指定的符号代替换行符</td></tr><tr><td align="center">ORS</td><td align="center">输出记录分隔符(默认值是一个换行符)</td></tr><tr><td align="center">RLENGTH</td><td align="center">由match函数所匹配的字符串的长度</td></tr><tr><td align="center">RS</td><td align="center">记录分隔符(默认是一个换行符)</td></tr><tr><td align="center">RSTART</td><td align="center">由match函数所匹配的字符串的第一个位置</td></tr><tr><td align="center">SUBSEP</td><td align="center">数组下标分隔符(默认值是/034)</td></tr></tbody></table><pre><code>$ awk 'BEGIN{printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\n","FILENAME","ARGC","FNR","FS","NF","NR","OFS","ORS","RS";printf "---------------------------------------------\n"} {printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\n",FILENAME,ARGC,FNR,FS,NF,NR,OFS,ORS,RS}'  log.txtFILENAME ARGC  FNR   FS   NF   NR  OFS  ORS   RS---------------------------------------------log.txt    2    1         5    1log.txt    2    2         5    2log.txt    2    3         3    3log.txt    2    4         4    4$ awk -F\' 'BEGIN{printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\n","FILENAME","ARGC","FNR","FS","NF","NR","OFS","ORS","RS";printf "---------------------------------------------\n"} {printf "%4s %4s %4s %4s %4s %4s %4s %4s %4s\n",FILENAME,ARGC,FNR,FS,NF,NR,OFS,ORS,RS}'  log.txtFILENAME ARGC  FNR   FS   NF   NR  OFS  ORS   RS---------------------------------------------log.txt    2    1    '    1    1log.txt    2    2    '    1    2log.txt    2    3    '    2    3log.txt    2    4    '    1    4# 输出顺序号 NR, 匹配文本行号$ awk '{print NR,FNR,$1,$2,$3}' log.txt---------------------------------------------1 1 2 this is2 2 3 Are you3 3 This's a test4 4 10 There are# 指定输出分割符$  awk '{print $1,$2,$5}' OFS=" $ "  log.txt---------------------------------------------2 $ this $ test3 $ Are $ awkThis's $ a $10 $ There $</code></pre><hr><h3 id="使用正则，字符串匹配"><a href="#使用正则，字符串匹配" class="headerlink" title="使用正则，字符串匹配"></a>使用正则，字符串匹配</h3><pre><code># 输出第二列包含 "th"，并打印第二列与第四列$ awk '$2 ~ /th/ {print $2,$4}' log.txt---------------------------------------------this a</code></pre><p><strong>~ 表示模式开始。// 中是模式。</strong></p><pre><code># 输出包含 "re" 的行$ awk '/re/ ' log.txt---------------------------------------------3 Are you like awk10 There are orange,apple,mongo</code></pre><hr><h3 id="忽略大小写"><a href="#忽略大小写" class="headerlink" title="忽略大小写"></a>忽略大小写</h3><pre><code>$ awk 'BEGIN{IGNORECASE=1} /this/' log.txt---------------------------------------------2 this is a testThis's a test</code></pre><hr><h3 id="模式取反"><a href="#模式取反" class="headerlink" title="模式取反"></a>模式取反</h3><pre><code>$ awk '$2 !~ /th/ {print $2,$4}' log.txt---------------------------------------------Are likeaThere orange,apple,mongo$ awk '!/th/ {print $2,$4}' log.txt---------------------------------------------Are likeaThere orange,apple,mongo</code></pre><hr><h3 id="awk脚本"><a href="#awk脚本" class="headerlink" title="awk脚本"></a>awk脚本</h3><p>关于 awk 脚本，我们需要注意两个关键词 BEGIN 和 END。</p><ul><li>BEGIN{ 这里面放的是执行前的语句 }</li><li>END {这里面放的是处理完所有的行后要执行的语句 }</li><li>{这里面放的是处理每一行时要执行的语句}</li></ul><p>假设有这么一个文件（学生成绩表）：</p><pre><code>$ cat score.txtMarry   2143 78 84 77Jack    2321 66 78 45Tom     2122 48 77 71Mike    2537 87 97 95Bob     2415 40 57 62</code></pre><p>我们的 awk 脚本如下：</p><pre><code>$ cat cal.awk#!/bin/awk -f#运行前BEGIN {    math = 0    english = 0    computer = 0     printf "NAME    NO.   MATH  ENGLISH  COMPUTER   TOTAL\n"    printf "---------------------------------------------\n"}#运行中{    math+=$3    english+=$4    computer+=$5    printf "%-6s %-6s %4d %8d %8d %8d\n", $1, $2, $3,$4,$5, $3+$4+$5}#运行后END {    printf "---------------------------------------------\n"    printf "  TOTAL:%10d %8d %8d \n", math, english, computer    printf "AVERAGE:%10.2f %8.2f %8.2f\n", math/NR, english/NR, computer/NR}</code></pre><p>我们来看一下执行结果：</p><pre><code>$ awk -f cal.awk score.txtNAME    NO.   MATH  ENGLISH  COMPUTER   TOTAL---------------------------------------------Marry  2143     78       84       77      239Jack   2321     66       78       45      189Tom    2122     48       77       71      196Mike   2537     87       97       95      279Bob    2415     40       57       62      159---------------------------------------------  TOTAL:       319      393      350AVERAGE:     63.80    78.60    70.00</code></pre><hr><h3 id="另外一些实例"><a href="#另外一些实例" class="headerlink" title="另外一些实例"></a>另外一些实例</h3><p>AWK 的 hello world 程序为：</p><pre><code>BEGIN { print "Hello, world!" }</code></pre><p>计算文件大小</p><pre><code>$ ls -l *.txt | awk '{sum+=$5} END {print sum}'--------------------------------------------------666581</code></pre><p>从文件中找出长度大于 80 的行：</p><pre><code>awk 'length&gt;80' log.txt</code></pre><p>打印九九乘法表</p><pre><code>seq 9 | sed 'H;g' | awk -v RS='' '{for(i=1;i&lt;=NF;i++)printf("%dx%d=%d%s", i, NR, i*NR, i==NR?"\n":"\t")}'</code></pre><h2 id="column命令"><a href="#column命令" class="headerlink" title="column命令"></a>column命令</h2><p>column命令的作用是将其输入格式化为多个列。在列之前填充行。输入可以来自文件，或默认情况下来自标准输入。除非使用-e选项，否则将忽略空行。 </p><h3 id="命令格式和选项-1"><a href="#命令格式和选项-1" class="headerlink" title="命令格式和选项"></a>命令格式和选项</h3><h4 id="语法形式-1"><a href="#语法形式-1" class="headerlink" title="语法形式"></a>语法形式</h4><pre class="line-numbers language-bash"><code class="language-bash">column <span class="token punctuation">[</span>参数<span class="token punctuation">]</span><span class="token punctuation">[</span>文件<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="常用命令选项-1"><a href="#常用命令选项-1" class="headerlink" title="常用命令选项"></a>常用命令选项</h4><pre class="line-numbers language-bash"><code class="language-bash">-s sep指定一组字符，用于分隔-t选项的列-t确定输入包含的列数并创建表-n禁用将多个相邻分隔符合并为单个分隔符行为-c columns输出格式化为显示columns列宽-x在填充行之前填充列-e不要忽略空白行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;Screen&quot;&gt;&lt;a href=&quot;#Screen&quot; class=&quot;headerlink&quot; title=&quot;Screen&quot;&gt;&lt;/a&gt;Screen&lt;/h2&gt;&lt;h3 id=</summary>
      
    
    
    
    <category term="Learn" scheme="http://www.drjun.wang/categories/Learn/"/>
    
    
    <category term="Software" scheme="http://www.drjun.wang/tags/Software/"/>
    
    <category term="Linux" scheme="http://www.drjun.wang/tags/Linux/"/>
    
  </entry>
  
</feed>
